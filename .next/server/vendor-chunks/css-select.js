"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/css-select";
exports.ids = ["vendor-chunks/css-select"];
exports.modules = {

/***/ "(action-browser)/./node_modules/css-select/lib/esm/attributes.js":
/*!*******************************************************!*\
  !*** ./node_modules/css-select/lib/esm/attributes.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attributeRules: () => (/* binding */ attributeRules)\n/* harmony export */ });\n/* harmony import */ var boolbase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! boolbase */ \"(action-browser)/./node_modules/boolbase/index.js\");\n\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */ const reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n    return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */ const caseInsensitiveAttributes = new Set([\n    \"accept\",\n    \"accept-charset\",\n    \"align\",\n    \"alink\",\n    \"axis\",\n    \"bgcolor\",\n    \"charset\",\n    \"checked\",\n    \"clear\",\n    \"codetype\",\n    \"color\",\n    \"compact\",\n    \"declare\",\n    \"defer\",\n    \"dir\",\n    \"direction\",\n    \"disabled\",\n    \"enctype\",\n    \"face\",\n    \"frame\",\n    \"hreflang\",\n    \"http-equiv\",\n    \"lang\",\n    \"language\",\n    \"link\",\n    \"media\",\n    \"method\",\n    \"multiple\",\n    \"nohref\",\n    \"noresize\",\n    \"noshade\",\n    \"nowrap\",\n    \"readonly\",\n    \"rel\",\n    \"rev\",\n    \"rules\",\n    \"scope\",\n    \"scrolling\",\n    \"selected\",\n    \"shape\",\n    \"target\",\n    \"text\",\n    \"type\",\n    \"valign\",\n    \"valuetype\",\n    \"vlink\"\n]);\nfunction shouldIgnoreCase(selector, options) {\n    return typeof selector.ignoreCase === \"boolean\" ? selector.ignoreCase : selector.ignoreCase === \"quirks\" ? !!options.quirksMode : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */ const attributeRules = {\n    equals (next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem)=>{\n                const attr = adapter.getAttributeValue(elem, name);\n                return attr != null && attr.length === value.length && attr.toLowerCase() === value && next(elem);\n            };\n        }\n        return (elem)=>adapter.getAttributeValue(elem, name) === value && next(elem);\n    },\n    hyphen (next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function hyphenIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len).toLowerCase() === value && next(elem);\n            };\n        }\n        return function hyphen(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len) === value && next(elem);\n        };\n    },\n    element (next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (/\\s/.test(value)) {\n            return boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc;\n        }\n        const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data, options) ? \"i\" : \"\");\n        return function element(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return attr != null && attr.length >= value.length && regex.test(attr) && next(elem);\n        };\n    },\n    exists (next, { name }, { adapter }) {\n        return (elem)=>adapter.hasAttrib(elem, name) && next(elem);\n    },\n    start (next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (len === 0) {\n            return boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem)=>{\n                const attr = adapter.getAttributeValue(elem, name);\n                return attr != null && attr.length >= len && attr.substr(0, len).toLowerCase() === value && next(elem);\n            };\n        }\n        return (elem)=>{\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) && next(elem);\n        };\n    },\n    end (next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = -value.length;\n        if (len === 0) {\n            return boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem)=>{\n                var _a;\n                return ((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);\n            };\n        }\n        return (elem)=>{\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) && next(elem);\n        };\n    },\n    any (next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (value === \"\") {\n            return boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            const regex = new RegExp(escapeRegex(value), \"i\");\n            return function anyIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return attr != null && attr.length >= value.length && regex.test(attr) && next(elem);\n            };\n        }\n        return (elem)=>{\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) && next(elem);\n        };\n    },\n    not (next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (value === \"\") {\n            return (elem)=>!!adapter.getAttributeValue(elem, name) && next(elem);\n        } else if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem)=>{\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr == null || attr.length !== value.length || attr.toLowerCase() !== value) && next(elem);\n            };\n        }\n        return (elem)=>adapter.getAttributeValue(elem, name) !== value && next(elem);\n    }\n}; //# sourceMappingURL=attributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/css-select/lib/esm/attributes.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/css-select/lib/esm/compile.js":
/*!****************************************************!*\
  !*** ./node_modules/css-select/lib/esm/compile.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compile: () => (/* binding */ compile),\n/* harmony export */   compileToken: () => (/* binding */ compileToken),\n/* harmony export */   compileUnsafe: () => (/* binding */ compileUnsafe)\n/* harmony export */ });\n/* harmony import */ var css_what__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! css-what */ \"(action-browser)/./node_modules/css-what/lib/es/index.js\");\n/* harmony import */ var boolbase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! boolbase */ \"(action-browser)/./node_modules/boolbase/index.js\");\n/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sort.js */ \"(action-browser)/./node_modules/css-select/lib/esm/sort.js\");\n/* harmony import */ var _general_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./general.js */ \"(action-browser)/./node_modules/css-select/lib/esm/general.js\");\n/* harmony import */ var _pseudo_selectors_subselects_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pseudo-selectors/subselects.js */ \"(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/subselects.js\");\n\n\n\n\n\n/**\n * Compiles a selector to an executable function.\n *\n * @param selector Selector to compile.\n * @param options Compilation options.\n * @param context Optional context for the selector.\n */ function compile(selector, options, context) {\n    const next = compileUnsafe(selector, options, context);\n    return (0,_pseudo_selectors_subselects_js__WEBPACK_IMPORTED_MODULE_3__.ensureIsTag)(next, options.adapter);\n}\nfunction compileUnsafe(selector, options, context) {\n    const token = typeof selector === \"string\" ? (0,css_what__WEBPACK_IMPORTED_MODULE_4__.parse)(selector) : selector;\n    return compileToken(token, options, context);\n}\nfunction includesScopePseudo(t) {\n    return t.type === css_what__WEBPACK_IMPORTED_MODULE_4__.SelectorType.Pseudo && (t.name === \"scope\" || Array.isArray(t.data) && t.data.some((data)=>data.some(includesScopePseudo)));\n}\nconst DESCENDANT_TOKEN = {\n    type: css_what__WEBPACK_IMPORTED_MODULE_4__.SelectorType.Descendant\n};\nconst FLEXIBLE_DESCENDANT_TOKEN = {\n    type: \"_flexibleDescendant\"\n};\nconst SCOPE_TOKEN = {\n    type: css_what__WEBPACK_IMPORTED_MODULE_4__.SelectorType.Pseudo,\n    name: \"scope\",\n    data: null\n};\n/*\n * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */ function absolutize(token, { adapter }, context) {\n    // TODO Use better check if the context is a document\n    const hasContext = !!(context === null || context === void 0 ? void 0 : context.every((e)=>{\n        const parent = adapter.isTag(e) && adapter.getParent(e);\n        return e === _pseudo_selectors_subselects_js__WEBPACK_IMPORTED_MODULE_3__.PLACEHOLDER_ELEMENT || parent && adapter.isTag(parent);\n    }));\n    for (const t of token){\n        if (t.length > 0 && (0,_sort_js__WEBPACK_IMPORTED_MODULE_1__.isTraversal)(t[0]) && t[0].type !== css_what__WEBPACK_IMPORTED_MODULE_4__.SelectorType.Descendant) {\n        // Don't continue in else branch\n        } else if (hasContext && !t.some(includesScopePseudo)) {\n            t.unshift(DESCENDANT_TOKEN);\n        } else {\n            continue;\n        }\n        t.unshift(SCOPE_TOKEN);\n    }\n}\nfunction compileToken(token, options, context) {\n    var _a;\n    token.forEach(_sort_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    context = (_a = options.context) !== null && _a !== void 0 ? _a : context;\n    const isArrayContext = Array.isArray(context);\n    const finalContext = context && (Array.isArray(context) ? context : [\n        context\n    ]);\n    // Check if the selector is relative\n    if (options.relativeSelector !== false) {\n        absolutize(token, options, finalContext);\n    } else if (token.some((t)=>t.length > 0 && (0,_sort_js__WEBPACK_IMPORTED_MODULE_1__.isTraversal)(t[0]))) {\n        throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n    }\n    let shouldTestNextSiblings = false;\n    const query = token.map((rules)=>{\n        if (rules.length >= 2) {\n            const [first, second] = rules;\n            if (first.type !== css_what__WEBPACK_IMPORTED_MODULE_4__.SelectorType.Pseudo || first.name !== \"scope\") {\n            // Ignore\n            } else if (isArrayContext && second.type === css_what__WEBPACK_IMPORTED_MODULE_4__.SelectorType.Descendant) {\n                rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n            } else if (second.type === css_what__WEBPACK_IMPORTED_MODULE_4__.SelectorType.Adjacent || second.type === css_what__WEBPACK_IMPORTED_MODULE_4__.SelectorType.Sibling) {\n                shouldTestNextSiblings = true;\n            }\n        }\n        return compileRules(rules, options, finalContext);\n    }).reduce(reduceRules, boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc);\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n    return query;\n}\nfunction compileRules(rules, options, context) {\n    var _a;\n    return rules.reduce((previous, rule)=>previous === boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc ? boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc : (0,_general_js__WEBPACK_IMPORTED_MODULE_2__.compileGeneralSelector)(previous, rule, options, context, compileToken), (_a = options.rootFunc) !== null && _a !== void 0 ? _a : boolbase__WEBPACK_IMPORTED_MODULE_0__.trueFunc);\n}\nfunction reduceRules(a, b) {\n    if (b === boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc || a === boolbase__WEBPACK_IMPORTED_MODULE_0__.trueFunc) {\n        return a;\n    }\n    if (a === boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc || b === boolbase__WEBPACK_IMPORTED_MODULE_0__.trueFunc) {\n        return b;\n    }\n    return function combine(elem) {\n        return a(elem) || b(elem);\n    };\n} //# sourceMappingURL=compile.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/css-select/lib/esm/compile.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/css-select/lib/esm/general.js":
/*!****************************************************!*\
  !*** ./node_modules/css-select/lib/esm/general.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compileGeneralSelector: () => (/* binding */ compileGeneralSelector)\n/* harmony export */ });\n/* harmony import */ var _attributes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attributes.js */ \"(action-browser)/./node_modules/css-select/lib/esm/attributes.js\");\n/* harmony import */ var _pseudo_selectors_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pseudo-selectors/index.js */ \"(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/index.js\");\n/* harmony import */ var css_what__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! css-what */ \"(action-browser)/./node_modules/css-what/lib/es/index.js\");\n\n\n\nfunction getElementParent(node, adapter) {\n    const parent = adapter.getParent(node);\n    if (parent && adapter.isTag(parent)) {\n        return parent;\n    }\n    return null;\n}\n/*\n * All available rules\n */ function compileGeneralSelector(next, selector, options, context, compileToken) {\n    const { adapter, equals } = options;\n    switch(selector.type){\n        case css_what__WEBPACK_IMPORTED_MODULE_2__.SelectorType.PseudoElement:\n            {\n                throw new Error(\"Pseudo-elements are not supported by css-select\");\n            }\n        case css_what__WEBPACK_IMPORTED_MODULE_2__.SelectorType.ColumnCombinator:\n            {\n                throw new Error(\"Column combinators are not yet supported by css-select\");\n            }\n        case css_what__WEBPACK_IMPORTED_MODULE_2__.SelectorType.Attribute:\n            {\n                if (selector.namespace != null) {\n                    throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n                }\n                if (!options.xmlMode || options.lowerCaseAttributeNames) {\n                    selector.name = selector.name.toLowerCase();\n                }\n                return _attributes_js__WEBPACK_IMPORTED_MODULE_0__.attributeRules[selector.action](next, selector, options);\n            }\n        case css_what__WEBPACK_IMPORTED_MODULE_2__.SelectorType.Pseudo:\n            {\n                return (0,_pseudo_selectors_index_js__WEBPACK_IMPORTED_MODULE_1__.compilePseudoSelector)(next, selector, options, context, compileToken);\n            }\n        // Tags\n        case css_what__WEBPACK_IMPORTED_MODULE_2__.SelectorType.Tag:\n            {\n                if (selector.namespace != null) {\n                    throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n                }\n                let { name } = selector;\n                if (!options.xmlMode || options.lowerCaseTags) {\n                    name = name.toLowerCase();\n                }\n                return function tag(elem) {\n                    return adapter.getName(elem) === name && next(elem);\n                };\n            }\n        // Traversal\n        case css_what__WEBPACK_IMPORTED_MODULE_2__.SelectorType.Descendant:\n            {\n                if (options.cacheResults === false || typeof WeakSet === \"undefined\") {\n                    return function descendant(elem) {\n                        let current = elem;\n                        while(current = getElementParent(current, adapter)){\n                            if (next(current)) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    };\n                }\n                // @ts-expect-error `ElementNode` is not extending object\n                const isFalseCache = new WeakSet();\n                return function cachedDescendant(elem) {\n                    let current = elem;\n                    while(current = getElementParent(current, adapter)){\n                        if (!isFalseCache.has(current)) {\n                            if (adapter.isTag(current) && next(current)) {\n                                return true;\n                            }\n                            isFalseCache.add(current);\n                        }\n                    }\n                    return false;\n                };\n            }\n        case \"_flexibleDescendant\":\n            {\n                // Include element itself, only used while querying an array\n                return function flexibleDescendant(elem) {\n                    let current = elem;\n                    do {\n                        if (next(current)) return true;\n                    }while (current = getElementParent(current, adapter));\n                    return false;\n                };\n            }\n        case css_what__WEBPACK_IMPORTED_MODULE_2__.SelectorType.Parent:\n            {\n                return function parent(elem) {\n                    return adapter.getChildren(elem).some((elem)=>adapter.isTag(elem) && next(elem));\n                };\n            }\n        case css_what__WEBPACK_IMPORTED_MODULE_2__.SelectorType.Child:\n            {\n                return function child(elem) {\n                    const parent = adapter.getParent(elem);\n                    return parent != null && adapter.isTag(parent) && next(parent);\n                };\n            }\n        case css_what__WEBPACK_IMPORTED_MODULE_2__.SelectorType.Sibling:\n            {\n                return function sibling(elem) {\n                    const siblings = adapter.getSiblings(elem);\n                    for(let i = 0; i < siblings.length; i++){\n                        const currentSibling = siblings[i];\n                        if (equals(elem, currentSibling)) break;\n                        if (adapter.isTag(currentSibling) && next(currentSibling)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n            }\n        case css_what__WEBPACK_IMPORTED_MODULE_2__.SelectorType.Adjacent:\n            {\n                if (adapter.prevElementSibling) {\n                    return function adjacent(elem) {\n                        const previous = adapter.prevElementSibling(elem);\n                        return previous != null && next(previous);\n                    };\n                }\n                return function adjacent(elem) {\n                    const siblings = adapter.getSiblings(elem);\n                    let lastElement;\n                    for(let i = 0; i < siblings.length; i++){\n                        const currentSibling = siblings[i];\n                        if (equals(elem, currentSibling)) break;\n                        if (adapter.isTag(currentSibling)) {\n                            lastElement = currentSibling;\n                        }\n                    }\n                    return !!lastElement && next(lastElement);\n                };\n            }\n        case css_what__WEBPACK_IMPORTED_MODULE_2__.SelectorType.Universal:\n            {\n                if (selector.namespace != null && selector.namespace !== \"*\") {\n                    throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n                }\n                return next;\n            }\n    }\n} //# sourceMappingURL=general.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/css-select/lib/esm/general.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/css-select/lib/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/css-select/lib/esm/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _compileToken: () => (/* binding */ _compileToken),\n/* harmony export */   _compileUnsafe: () => (/* binding */ _compileUnsafe),\n/* harmony export */   aliases: () => (/* reexport safe */ _pseudo_selectors_index_js__WEBPACK_IMPORTED_MODULE_4__.aliases),\n/* harmony export */   compile: () => (/* binding */ compile),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   filters: () => (/* reexport safe */ _pseudo_selectors_index_js__WEBPACK_IMPORTED_MODULE_4__.filters),\n/* harmony export */   is: () => (/* binding */ is),\n/* harmony export */   prepareContext: () => (/* binding */ prepareContext),\n/* harmony export */   pseudos: () => (/* reexport safe */ _pseudo_selectors_index_js__WEBPACK_IMPORTED_MODULE_4__.pseudos),\n/* harmony export */   selectAll: () => (/* binding */ selectAll),\n/* harmony export */   selectOne: () => (/* binding */ selectOne)\n/* harmony export */ });\n/* harmony import */ var domutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! domutils */ \"(action-browser)/./node_modules/domutils/lib/esm/index.js\");\n/* harmony import */ var boolbase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! boolbase */ \"(action-browser)/./node_modules/boolbase/index.js\");\n/* harmony import */ var _compile_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compile.js */ \"(action-browser)/./node_modules/css-select/lib/esm/compile.js\");\n/* harmony import */ var _pseudo_selectors_subselects_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pseudo-selectors/subselects.js */ \"(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/subselects.js\");\n/* harmony import */ var _pseudo_selectors_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pseudo-selectors/index.js */ \"(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/index.js\");\n\n\n\n\nconst defaultEquals = (a, b)=>a === b;\nconst defaultOptions = {\n    adapter: domutils__WEBPACK_IMPORTED_MODULE_0__,\n    equals: defaultEquals\n};\nfunction convertOptionFormats(options) {\n    var _a, _b, _c, _d;\n    /*\n     * We force one format of options to the other one.\n     */ // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n    const opts = options !== null && options !== void 0 ? options : defaultOptions;\n    // @ts-expect-error Same as above.\n    (_a = opts.adapter) !== null && _a !== void 0 ? _a : opts.adapter = domutils__WEBPACK_IMPORTED_MODULE_0__;\n    // @ts-expect-error `equals` does not exist on `Options`\n    (_b = opts.equals) !== null && _b !== void 0 ? _b : opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals;\n    return opts;\n}\nfunction wrapCompile(func) {\n    return function addAdapter(selector, options, context) {\n        const opts = convertOptionFormats(options);\n        return func(selector, opts, context);\n    };\n}\n/**\n * Compiles the query, returns a function.\n */ const compile = wrapCompile(_compile_js__WEBPACK_IMPORTED_MODULE_2__.compile);\nconst _compileUnsafe = wrapCompile(_compile_js__WEBPACK_IMPORTED_MODULE_2__.compileUnsafe);\nconst _compileToken = wrapCompile(_compile_js__WEBPACK_IMPORTED_MODULE_2__.compileToken);\nfunction getSelectorFunc(searchFunc) {\n    return function select(query, elements, options) {\n        const opts = convertOptionFormats(options);\n        if (typeof query !== \"function\") {\n            query = (0,_compile_js__WEBPACK_IMPORTED_MODULE_2__.compileUnsafe)(query, opts, elements);\n        }\n        const filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n        return searchFunc(query, filteredElements, opts);\n    };\n}\nfunction prepareContext(elems, adapter, shouldTestNextSiblings = false) {\n    /*\n     * Add siblings if the query requires them.\n     * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n     */ if (shouldTestNextSiblings) {\n        elems = appendNextSiblings(elems, adapter);\n    }\n    return Array.isArray(elems) ? adapter.removeSubsets(elems) : adapter.getChildren(elems);\n}\nfunction appendNextSiblings(elem, adapter) {\n    // Order matters because jQuery seems to check the children before the siblings\n    const elems = Array.isArray(elem) ? elem.slice(0) : [\n        elem\n    ];\n    const elemsLength = elems.length;\n    for(let i = 0; i < elemsLength; i++){\n        const nextSiblings = (0,_pseudo_selectors_subselects_js__WEBPACK_IMPORTED_MODULE_3__.getNextSiblings)(elems[i], adapter);\n        elems.push(...nextSiblings);\n    }\n    return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */ const selectAll = getSelectorFunc((query, elems, options)=>query === boolbase__WEBPACK_IMPORTED_MODULE_1__.falseFunc || !elems || elems.length === 0 ? [] : options.adapter.findAll(query, elems));\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */ const selectOne = getSelectorFunc((query, elems, options)=>query === boolbase__WEBPACK_IMPORTED_MODULE_1__.falseFunc || !elems || elems.length === 0 ? null : options.adapter.findOne(query, elems));\n/**\n * Tests whether or not an element is matched by query.\n *\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elem The element to test if it matches the query.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns\n */ function is(elem, query, options) {\n    const opts = convertOptionFormats(options);\n    return (typeof query === \"function\" ? query : (0,_compile_js__WEBPACK_IMPORTED_MODULE_2__.compile)(query, opts))(elem);\n}\n/**\n * Alias for selectAll(query, elems, options).\n * @see [compile] for supported selector queries.\n */ /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (selectAll);\n// Export filters, pseudos and aliases to allow users to supply their own.\n/** @deprecated Use the `pseudos` option instead. */  //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jc3Mtc2VsZWN0L2xpYi9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFxQztBQUNMO0FBQ21EO0FBQ2hCO0FBQ25FLE1BQU1PLGdCQUFnQixDQUFDQyxHQUFHQyxJQUFNRCxNQUFNQztBQUN0QyxNQUFNQyxpQkFBaUI7SUFDbkJDLFNBQVNYLHFDQUFRQTtJQUNqQlksUUFBUUw7QUFDWjtBQUNBLFNBQVNNLHFCQUFxQkMsT0FBTztJQUNqQyxJQUFJQyxJQUFJQyxJQUFJQyxJQUFJQztJQUNoQjs7S0FFQyxHQUNELGlGQUFpRjtJQUNqRixNQUFNQyxPQUFPTCxZQUFZLFFBQVFBLFlBQVksS0FBSyxJQUFJQSxVQUFVSjtJQUNoRSxrQ0FBa0M7SUFDakNLLENBQUFBLEtBQUtJLEtBQUtSLE9BQU8sTUFBTSxRQUFRSSxPQUFPLEtBQUssSUFBSUEsS0FBTUksS0FBS1IsT0FBTyxHQUFHWCxxQ0FBUUE7SUFDN0Usd0RBQXdEO0lBQ3ZEZ0IsQ0FBQUEsS0FBS0csS0FBS1AsTUFBTSxNQUFNLFFBQVFJLE9BQU8sS0FBSyxJQUFJQSxLQUFNRyxLQUFLUCxNQUFNLEdBQUcsQ0FBQ00sS0FBSyxDQUFDRCxLQUFLRSxLQUFLUixPQUFPLE1BQU0sUUFBUU0sT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHTCxNQUFNLE1BQU0sUUFBUU0sT0FBTyxLQUFLLElBQUlBLEtBQUtYO0lBQzlLLE9BQU9ZO0FBQ1g7QUFDQSxTQUFTQyxZQUFZQyxJQUFJO0lBQ3JCLE9BQU8sU0FBU0MsV0FBV0MsUUFBUSxFQUFFVCxPQUFPLEVBQUVVLE9BQU87UUFDakQsTUFBTUwsT0FBT04scUJBQXFCQztRQUNsQyxPQUFPTyxLQUFLRSxVQUFVSixNQUFNSztJQUNoQztBQUNKO0FBQ0E7O0NBRUMsR0FDTSxNQUFNdEIsVUFBVWtCLFlBQVlqQixnREFBVUEsRUFBRTtBQUN4QyxNQUFNc0IsaUJBQWlCTCxZQUFZaEIsc0RBQWFBLEVBQUU7QUFDbEQsTUFBTXNCLGdCQUFnQk4sWUFBWWYscURBQVlBLEVBQUU7QUFDdkQsU0FBU3NCLGdCQUFnQkMsVUFBVTtJQUMvQixPQUFPLFNBQVNDLE9BQU9DLEtBQUssRUFBRUMsUUFBUSxFQUFFakIsT0FBTztRQUMzQyxNQUFNSyxPQUFPTixxQkFBcUJDO1FBQ2xDLElBQUksT0FBT2dCLFVBQVUsWUFBWTtZQUM3QkEsUUFBUTFCLDBEQUFhQSxDQUFDMEIsT0FBT1gsTUFBTVk7UUFDdkM7UUFDQSxNQUFNQyxtQkFBbUJDLGVBQWVGLFVBQVVaLEtBQUtSLE9BQU8sRUFBRW1CLE1BQU1JLHNCQUFzQjtRQUM1RixPQUFPTixXQUFXRSxPQUFPRSxrQkFBa0JiO0lBQy9DO0FBQ0o7QUFDTyxTQUFTYyxlQUFlRSxLQUFLLEVBQUV4QixPQUFPLEVBQUV1Qix5QkFBeUIsS0FBSztJQUN6RTs7O0tBR0MsR0FDRCxJQUFJQSx3QkFBd0I7UUFDeEJDLFFBQVFDLG1CQUFtQkQsT0FBT3hCO0lBQ3RDO0lBQ0EsT0FBTzBCLE1BQU1DLE9BQU8sQ0FBQ0gsU0FDZnhCLFFBQVE0QixhQUFhLENBQUNKLFNBQ3RCeEIsUUFBUTZCLFdBQVcsQ0FBQ0w7QUFDOUI7QUFDQSxTQUFTQyxtQkFBbUJLLElBQUksRUFBRTlCLE9BQU87SUFDckMsK0VBQStFO0lBQy9FLE1BQU13QixRQUFRRSxNQUFNQyxPQUFPLENBQUNHLFFBQVFBLEtBQUtDLEtBQUssQ0FBQyxLQUFLO1FBQUNEO0tBQUs7SUFDMUQsTUFBTUUsY0FBY1IsTUFBTVMsTUFBTTtJQUNoQyxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUYsYUFBYUUsSUFBSztRQUNsQyxNQUFNQyxlQUFleEMsZ0ZBQWVBLENBQUM2QixLQUFLLENBQUNVLEVBQUUsRUFBRWxDO1FBQy9Dd0IsTUFBTVksSUFBSSxJQUFJRDtJQUNsQjtJQUNBLE9BQU9YO0FBQ1g7QUFDQTs7Ozs7Ozs7O0NBU0MsR0FDTSxNQUFNYSxZQUFZckIsZ0JBQWdCLENBQUNHLE9BQU9LLE9BQU9yQixVQUFZZ0IsVUFBVTdCLCtDQUFrQixJQUFJLENBQUNrQyxTQUFTQSxNQUFNUyxNQUFNLEtBQUssSUFDekgsRUFBRSxHQUNGOUIsUUFBUUgsT0FBTyxDQUFDdUMsT0FBTyxDQUFDcEIsT0FBT0ssUUFBUTtBQUM3Qzs7Ozs7Ozs7Q0FRQyxHQUNNLE1BQU1nQixZQUFZeEIsZ0JBQWdCLENBQUNHLE9BQU9LLE9BQU9yQixVQUFZZ0IsVUFBVTdCLCtDQUFrQixJQUFJLENBQUNrQyxTQUFTQSxNQUFNUyxNQUFNLEtBQUssSUFDekgsT0FDQTlCLFFBQVFILE9BQU8sQ0FBQ3lDLE9BQU8sQ0FBQ3RCLE9BQU9LLFFBQVE7QUFDN0M7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLFNBQVNrQixHQUFHWixJQUFJLEVBQUVYLEtBQUssRUFBRWhCLE9BQU87SUFDbkMsTUFBTUssT0FBT04scUJBQXFCQztJQUNsQyxPQUFPLENBQUMsT0FBT2dCLFVBQVUsYUFBYUEsUUFBUTNCLG9EQUFVQSxDQUFDMkIsT0FBT1gsS0FBSSxFQUFHc0I7QUFDM0U7QUFDQTs7O0NBR0MsR0FDRCxpRUFBZU8sU0FBU0EsRUFBQztBQUN6QiwwRUFBMEU7QUFDMUUsa0RBQWtELEdBQ3NCLENBQ3hFLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL25ldy1ydW1ibGUtZG93bmxvYWRlci8uL25vZGVfbW9kdWxlcy9jc3Mtc2VsZWN0L2xpYi9lc20vaW5kZXguanM/M2RiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBEb21VdGlscyBmcm9tIFwiZG9tdXRpbHNcIjtcbmltcG9ydCBib29sYmFzZSBmcm9tIFwiYm9vbGJhc2VcIjtcbmltcG9ydCB7IGNvbXBpbGUgYXMgY29tcGlsZVJhdywgY29tcGlsZVVuc2FmZSwgY29tcGlsZVRva2VuLCB9IGZyb20gXCIuL2NvbXBpbGUuanNcIjtcbmltcG9ydCB7IGdldE5leHRTaWJsaW5ncyB9IGZyb20gXCIuL3BzZXVkby1zZWxlY3RvcnMvc3Vic2VsZWN0cy5qc1wiO1xuY29uc3QgZGVmYXVsdEVxdWFscyA9IChhLCBiKSA9PiBhID09PSBiO1xuY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgYWRhcHRlcjogRG9tVXRpbHMsXG4gICAgZXF1YWxzOiBkZWZhdWx0RXF1YWxzLFxufTtcbmZ1bmN0aW9uIGNvbnZlcnRPcHRpb25Gb3JtYXRzKG9wdGlvbnMpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgLypcbiAgICAgKiBXZSBmb3JjZSBvbmUgZm9ybWF0IG9mIG9wdGlvbnMgdG8gdGhlIG90aGVyIG9uZS5cbiAgICAgKi9cbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIERlZmF1bHQgb3B0aW9ucyBtYXkgaGF2ZSBpbmNvbXBhdGlibGUgYE5vZGVgIC8gYEVsZW1lbnROb2RlYC5cbiAgICBjb25zdCBvcHRzID0gb3B0aW9ucyAhPT0gbnVsbCAmJiBvcHRpb25zICE9PSB2b2lkIDAgPyBvcHRpb25zIDogZGVmYXVsdE9wdGlvbnM7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBTYW1lIGFzIGFib3ZlLlxuICAgIChfYSA9IG9wdHMuYWRhcHRlcikgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogKG9wdHMuYWRhcHRlciA9IERvbVV0aWxzKTtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIGBlcXVhbHNgIGRvZXMgbm90IGV4aXN0IG9uIGBPcHRpb25zYFxuICAgIChfYiA9IG9wdHMuZXF1YWxzKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAob3B0cy5lcXVhbHMgPSAoX2QgPSAoX2MgPSBvcHRzLmFkYXB0ZXIpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5lcXVhbHMpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IGRlZmF1bHRFcXVhbHMpO1xuICAgIHJldHVybiBvcHRzO1xufVxuZnVuY3Rpb24gd3JhcENvbXBpbGUoZnVuYykge1xuICAgIHJldHVybiBmdW5jdGlvbiBhZGRBZGFwdGVyKHNlbGVjdG9yLCBvcHRpb25zLCBjb250ZXh0KSB7XG4gICAgICAgIGNvbnN0IG9wdHMgPSBjb252ZXJ0T3B0aW9uRm9ybWF0cyhvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIGZ1bmMoc2VsZWN0b3IsIG9wdHMsIGNvbnRleHQpO1xuICAgIH07XG59XG4vKipcbiAqIENvbXBpbGVzIHRoZSBxdWVyeSwgcmV0dXJucyBhIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgY29uc3QgY29tcGlsZSA9IHdyYXBDb21waWxlKGNvbXBpbGVSYXcpO1xuZXhwb3J0IGNvbnN0IF9jb21waWxlVW5zYWZlID0gd3JhcENvbXBpbGUoY29tcGlsZVVuc2FmZSk7XG5leHBvcnQgY29uc3QgX2NvbXBpbGVUb2tlbiA9IHdyYXBDb21waWxlKGNvbXBpbGVUb2tlbik7XG5mdW5jdGlvbiBnZXRTZWxlY3RvckZ1bmMoc2VhcmNoRnVuYykge1xuICAgIHJldHVybiBmdW5jdGlvbiBzZWxlY3QocXVlcnksIGVsZW1lbnRzLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IG9wdHMgPSBjb252ZXJ0T3B0aW9uRm9ybWF0cyhvcHRpb25zKTtcbiAgICAgICAgaWYgKHR5cGVvZiBxdWVyeSAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBxdWVyeSA9IGNvbXBpbGVVbnNhZmUocXVlcnksIG9wdHMsIGVsZW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBmaWx0ZXJlZEVsZW1lbnRzID0gcHJlcGFyZUNvbnRleHQoZWxlbWVudHMsIG9wdHMuYWRhcHRlciwgcXVlcnkuc2hvdWxkVGVzdE5leHRTaWJsaW5ncyk7XG4gICAgICAgIHJldHVybiBzZWFyY2hGdW5jKHF1ZXJ5LCBmaWx0ZXJlZEVsZW1lbnRzLCBvcHRzKTtcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHByZXBhcmVDb250ZXh0KGVsZW1zLCBhZGFwdGVyLCBzaG91bGRUZXN0TmV4dFNpYmxpbmdzID0gZmFsc2UpIHtcbiAgICAvKlxuICAgICAqIEFkZCBzaWJsaW5ncyBpZiB0aGUgcXVlcnkgcmVxdWlyZXMgdGhlbS5cbiAgICAgKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZiNTUvY3NzLXNlbGVjdC9wdWxsLzQzI2lzc3VlY29tbWVudC0yMjU0MTQ2OTJcbiAgICAgKi9cbiAgICBpZiAoc2hvdWxkVGVzdE5leHRTaWJsaW5ncykge1xuICAgICAgICBlbGVtcyA9IGFwcGVuZE5leHRTaWJsaW5ncyhlbGVtcywgYWRhcHRlcik7XG4gICAgfVxuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGVsZW1zKVxuICAgICAgICA/IGFkYXB0ZXIucmVtb3ZlU3Vic2V0cyhlbGVtcylcbiAgICAgICAgOiBhZGFwdGVyLmdldENoaWxkcmVuKGVsZW1zKTtcbn1cbmZ1bmN0aW9uIGFwcGVuZE5leHRTaWJsaW5ncyhlbGVtLCBhZGFwdGVyKSB7XG4gICAgLy8gT3JkZXIgbWF0dGVycyBiZWNhdXNlIGpRdWVyeSBzZWVtcyB0byBjaGVjayB0aGUgY2hpbGRyZW4gYmVmb3JlIHRoZSBzaWJsaW5nc1xuICAgIGNvbnN0IGVsZW1zID0gQXJyYXkuaXNBcnJheShlbGVtKSA/IGVsZW0uc2xpY2UoMCkgOiBbZWxlbV07XG4gICAgY29uc3QgZWxlbXNMZW5ndGggPSBlbGVtcy5sZW5ndGg7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbGVtc0xlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IG5leHRTaWJsaW5ncyA9IGdldE5leHRTaWJsaW5ncyhlbGVtc1tpXSwgYWRhcHRlcik7XG4gICAgICAgIGVsZW1zLnB1c2goLi4ubmV4dFNpYmxpbmdzKTtcbiAgICB9XG4gICAgcmV0dXJuIGVsZW1zO1xufVxuLyoqXG4gKiBAdGVtcGxhdGUgTm9kZSBUaGUgZ2VuZXJpYyBOb2RlIHR5cGUgZm9yIHRoZSBET00gYWRhcHRlciBiZWluZyB1c2VkLlxuICogQHRlbXBsYXRlIEVsZW1lbnROb2RlIFRoZSBOb2RlIHR5cGUgZm9yIGVsZW1lbnRzIGZvciB0aGUgRE9NIGFkYXB0ZXIgYmVpbmcgdXNlZC5cbiAqIEBwYXJhbSBlbGVtcyBFbGVtZW50cyB0byBxdWVyeS4gSWYgaXQgaXMgYW4gZWxlbWVudCwgaXRzIGNoaWxkcmVuIHdpbGwgYmUgcXVlcmllZC4uXG4gKiBAcGFyYW0gcXVlcnkgY2FuIGJlIGVpdGhlciBhIENTUyBzZWxlY3RvciBzdHJpbmcgb3IgYSBjb21waWxlZCBxdWVyeSBmdW5jdGlvbi5cbiAqIEBwYXJhbSBbb3B0aW9uc10gb3B0aW9ucyBmb3IgcXVlcnlpbmcgdGhlIGRvY3VtZW50LlxuICogQHNlZSBjb21waWxlIGZvciBzdXBwb3J0ZWQgc2VsZWN0b3IgcXVlcmllcy5cbiAqIEByZXR1cm5zIEFsbCBtYXRjaGluZyBlbGVtZW50cy5cbiAqXG4gKi9cbmV4cG9ydCBjb25zdCBzZWxlY3RBbGwgPSBnZXRTZWxlY3RvckZ1bmMoKHF1ZXJ5LCBlbGVtcywgb3B0aW9ucykgPT4gcXVlcnkgPT09IGJvb2xiYXNlLmZhbHNlRnVuYyB8fCAhZWxlbXMgfHwgZWxlbXMubGVuZ3RoID09PSAwXG4gICAgPyBbXVxuICAgIDogb3B0aW9ucy5hZGFwdGVyLmZpbmRBbGwocXVlcnksIGVsZW1zKSk7XG4vKipcbiAqIEB0ZW1wbGF0ZSBOb2RlIFRoZSBnZW5lcmljIE5vZGUgdHlwZSBmb3IgdGhlIERPTSBhZGFwdGVyIGJlaW5nIHVzZWQuXG4gKiBAdGVtcGxhdGUgRWxlbWVudE5vZGUgVGhlIE5vZGUgdHlwZSBmb3IgZWxlbWVudHMgZm9yIHRoZSBET00gYWRhcHRlciBiZWluZyB1c2VkLlxuICogQHBhcmFtIGVsZW1zIEVsZW1lbnRzIHRvIHF1ZXJ5LiBJZiBpdCBpcyBhbiBlbGVtZW50LCBpdHMgY2hpbGRyZW4gd2lsbCBiZSBxdWVyaWVkLi5cbiAqIEBwYXJhbSBxdWVyeSBjYW4gYmUgZWl0aGVyIGEgQ1NTIHNlbGVjdG9yIHN0cmluZyBvciBhIGNvbXBpbGVkIHF1ZXJ5IGZ1bmN0aW9uLlxuICogQHBhcmFtIFtvcHRpb25zXSBvcHRpb25zIGZvciBxdWVyeWluZyB0aGUgZG9jdW1lbnQuXG4gKiBAc2VlIGNvbXBpbGUgZm9yIHN1cHBvcnRlZCBzZWxlY3RvciBxdWVyaWVzLlxuICogQHJldHVybnMgdGhlIGZpcnN0IG1hdGNoLCBvciBudWxsIGlmIHRoZXJlIHdhcyBubyBtYXRjaC5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlbGVjdE9uZSA9IGdldFNlbGVjdG9yRnVuYygocXVlcnksIGVsZW1zLCBvcHRpb25zKSA9PiBxdWVyeSA9PT0gYm9vbGJhc2UuZmFsc2VGdW5jIHx8ICFlbGVtcyB8fCBlbGVtcy5sZW5ndGggPT09IDBcbiAgICA/IG51bGxcbiAgICA6IG9wdGlvbnMuYWRhcHRlci5maW5kT25lKHF1ZXJ5LCBlbGVtcykpO1xuLyoqXG4gKiBUZXN0cyB3aGV0aGVyIG9yIG5vdCBhbiBlbGVtZW50IGlzIG1hdGNoZWQgYnkgcXVlcnkuXG4gKlxuICogQHRlbXBsYXRlIE5vZGUgVGhlIGdlbmVyaWMgTm9kZSB0eXBlIGZvciB0aGUgRE9NIGFkYXB0ZXIgYmVpbmcgdXNlZC5cbiAqIEB0ZW1wbGF0ZSBFbGVtZW50Tm9kZSBUaGUgTm9kZSB0eXBlIGZvciBlbGVtZW50cyBmb3IgdGhlIERPTSBhZGFwdGVyIGJlaW5nIHVzZWQuXG4gKiBAcGFyYW0gZWxlbSBUaGUgZWxlbWVudCB0byB0ZXN0IGlmIGl0IG1hdGNoZXMgdGhlIHF1ZXJ5LlxuICogQHBhcmFtIHF1ZXJ5IGNhbiBiZSBlaXRoZXIgYSBDU1Mgc2VsZWN0b3Igc3RyaW5nIG9yIGEgY29tcGlsZWQgcXVlcnkgZnVuY3Rpb24uXG4gKiBAcGFyYW0gW29wdGlvbnNdIG9wdGlvbnMgZm9yIHF1ZXJ5aW5nIHRoZSBkb2N1bWVudC5cbiAqIEBzZWUgY29tcGlsZSBmb3Igc3VwcG9ydGVkIHNlbGVjdG9yIHF1ZXJpZXMuXG4gKiBAcmV0dXJuc1xuICovXG5leHBvcnQgZnVuY3Rpb24gaXMoZWxlbSwgcXVlcnksIG9wdGlvbnMpIHtcbiAgICBjb25zdCBvcHRzID0gY29udmVydE9wdGlvbkZvcm1hdHMob3B0aW9ucyk7XG4gICAgcmV0dXJuICh0eXBlb2YgcXVlcnkgPT09IFwiZnVuY3Rpb25cIiA/IHF1ZXJ5IDogY29tcGlsZVJhdyhxdWVyeSwgb3B0cykpKGVsZW0pO1xufVxuLyoqXG4gKiBBbGlhcyBmb3Igc2VsZWN0QWxsKHF1ZXJ5LCBlbGVtcywgb3B0aW9ucykuXG4gKiBAc2VlIFtjb21waWxlXSBmb3Igc3VwcG9ydGVkIHNlbGVjdG9yIHF1ZXJpZXMuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IHNlbGVjdEFsbDtcbi8vIEV4cG9ydCBmaWx0ZXJzLCBwc2V1ZG9zIGFuZCBhbGlhc2VzIHRvIGFsbG93IHVzZXJzIHRvIHN1cHBseSB0aGVpciBvd24uXG4vKiogQGRlcHJlY2F0ZWQgVXNlIHRoZSBgcHNldWRvc2Agb3B0aW9uIGluc3RlYWQuICovXG5leHBvcnQgeyBmaWx0ZXJzLCBwc2V1ZG9zLCBhbGlhc2VzIH0gZnJvbSBcIi4vcHNldWRvLXNlbGVjdG9ycy9pbmRleC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIkRvbVV0aWxzIiwiYm9vbGJhc2UiLCJjb21waWxlIiwiY29tcGlsZVJhdyIsImNvbXBpbGVVbnNhZmUiLCJjb21waWxlVG9rZW4iLCJnZXROZXh0U2libGluZ3MiLCJkZWZhdWx0RXF1YWxzIiwiYSIsImIiLCJkZWZhdWx0T3B0aW9ucyIsImFkYXB0ZXIiLCJlcXVhbHMiLCJjb252ZXJ0T3B0aW9uRm9ybWF0cyIsIm9wdGlvbnMiLCJfYSIsIl9iIiwiX2MiLCJfZCIsIm9wdHMiLCJ3cmFwQ29tcGlsZSIsImZ1bmMiLCJhZGRBZGFwdGVyIiwic2VsZWN0b3IiLCJjb250ZXh0IiwiX2NvbXBpbGVVbnNhZmUiLCJfY29tcGlsZVRva2VuIiwiZ2V0U2VsZWN0b3JGdW5jIiwic2VhcmNoRnVuYyIsInNlbGVjdCIsInF1ZXJ5IiwiZWxlbWVudHMiLCJmaWx0ZXJlZEVsZW1lbnRzIiwicHJlcGFyZUNvbnRleHQiLCJzaG91bGRUZXN0TmV4dFNpYmxpbmdzIiwiZWxlbXMiLCJhcHBlbmROZXh0U2libGluZ3MiLCJBcnJheSIsImlzQXJyYXkiLCJyZW1vdmVTdWJzZXRzIiwiZ2V0Q2hpbGRyZW4iLCJlbGVtIiwic2xpY2UiLCJlbGVtc0xlbmd0aCIsImxlbmd0aCIsImkiLCJuZXh0U2libGluZ3MiLCJwdXNoIiwic2VsZWN0QWxsIiwiZmFsc2VGdW5jIiwiZmluZEFsbCIsInNlbGVjdE9uZSIsImZpbmRPbmUiLCJpcyIsImZpbHRlcnMiLCJwc2V1ZG9zIiwiYWxpYXNlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/css-select/lib/esm/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/aliases.js":
/*!*********************************************************************!*\
  !*** ./node_modules/css-select/lib/esm/pseudo-selectors/aliases.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aliases: () => (/* binding */ aliases)\n/* harmony export */ });\n/**\n * Aliases are pseudos that are expressed as selectors.\n */ const aliases = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    // JQuery extensions\n    // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\"\n}; //# sourceMappingURL=aliases.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jc3Mtc2VsZWN0L2xpYi9lc20vcHNldWRvLXNlbGVjdG9ycy9hbGlhc2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Q0FFQyxHQUNNLE1BQU1BLFVBQVU7SUFDbkIsUUFBUTtJQUNSLFlBQVk7SUFDWkMsTUFBTTtJQUNOLFFBQVE7SUFDUiwwRUFBMEU7SUFDMUVDLFVBQVUsQ0FBQzs7OztLQUlWLENBQUM7SUFDRkMsU0FBUztJQUNUQyxTQUFTO0lBQ1RDLFVBQVU7SUFDVkMsVUFBVTtJQUNWLG9CQUFvQjtJQUNwQix3RkFBd0Y7SUFDeEZDLFVBQVU7SUFDVkMsVUFBVTtJQUNWQyxNQUFNO0lBQ05DLFVBQVU7SUFDVkMsT0FBTztJQUNQQyxPQUFPO0lBQ1BDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxRQUFRO0lBQ1JDLFFBQVE7SUFDUkMsUUFBUTtJQUNSQyxPQUFPO0lBQ1BDLE1BQU07QUFDVixFQUFFLENBQ0YsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV3LXJ1bWJsZS1kb3dubG9hZGVyLy4vbm9kZV9tb2R1bGVzL2Nzcy1zZWxlY3QvbGliL2VzbS9wc2V1ZG8tc2VsZWN0b3JzL2FsaWFzZXMuanM/Nzc5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFsaWFzZXMgYXJlIHBzZXVkb3MgdGhhdCBhcmUgZXhwcmVzc2VkIGFzIHNlbGVjdG9ycy5cbiAqL1xuZXhwb3J0IGNvbnN0IGFsaWFzZXMgPSB7XG4gICAgLy8gTGlua3NcbiAgICBcImFueS1saW5rXCI6IFwiOmlzKGEsIGFyZWEsIGxpbmspW2hyZWZdXCIsXG4gICAgbGluazogXCI6YW55LWxpbms6bm90KDp2aXNpdGVkKVwiLFxuICAgIC8vIEZvcm1zXG4gICAgLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc2NyaXB0aW5nLmh0bWwjZGlzYWJsZWQtZWxlbWVudHNcbiAgICBkaXNhYmxlZDogYDppcyhcbiAgICAgICAgOmlzKGJ1dHRvbiwgaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEsIG9wdGdyb3VwLCBvcHRpb24pW2Rpc2FibGVkXSxcbiAgICAgICAgb3B0Z3JvdXBbZGlzYWJsZWRdID4gb3B0aW9uLFxuICAgICAgICBmaWVsZHNldFtkaXNhYmxlZF06bm90KGZpZWxkc2V0W2Rpc2FibGVkXSBsZWdlbmQ6Zmlyc3Qtb2YtdHlwZSAqKVxuICAgIClgLFxuICAgIGVuYWJsZWQ6IFwiOm5vdCg6ZGlzYWJsZWQpXCIsXG4gICAgY2hlY2tlZDogXCI6aXMoOmlzKGlucHV0W3R5cGU9cmFkaW9dLCBpbnB1dFt0eXBlPWNoZWNrYm94XSlbY2hlY2tlZF0sIG9wdGlvbjpzZWxlY3RlZClcIixcbiAgICByZXF1aXJlZDogXCI6aXMoaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEpW3JlcXVpcmVkXVwiLFxuICAgIG9wdGlvbmFsOiBcIjppcyhpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSk6bm90KFtyZXF1aXJlZF0pXCIsXG4gICAgLy8gSlF1ZXJ5IGV4dGVuc2lvbnNcbiAgICAvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3JtLWVsZW1lbnRzLmh0bWwjY29uY2VwdC1vcHRpb24tc2VsZWN0ZWRuZXNzXG4gICAgc2VsZWN0ZWQ6IFwib3B0aW9uOmlzKFtzZWxlY3RlZF0sIHNlbGVjdDpub3QoW211bHRpcGxlXSk6bm90KDpoYXMoPiBvcHRpb25bc2VsZWN0ZWRdKSkgPiA6Zmlyc3Qtb2YtdHlwZSlcIixcbiAgICBjaGVja2JveDogXCJbdHlwZT1jaGVja2JveF1cIixcbiAgICBmaWxlOiBcIlt0eXBlPWZpbGVdXCIsXG4gICAgcGFzc3dvcmQ6IFwiW3R5cGU9cGFzc3dvcmRdXCIsXG4gICAgcmFkaW86IFwiW3R5cGU9cmFkaW9dXCIsXG4gICAgcmVzZXQ6IFwiW3R5cGU9cmVzZXRdXCIsXG4gICAgaW1hZ2U6IFwiW3R5cGU9aW1hZ2VdXCIsXG4gICAgc3VibWl0OiBcIlt0eXBlPXN1Ym1pdF1cIixcbiAgICBwYXJlbnQ6IFwiOm5vdCg6ZW1wdHkpXCIsXG4gICAgaGVhZGVyOiBcIjppcyhoMSwgaDIsIGgzLCBoNCwgaDUsIGg2KVwiLFxuICAgIGJ1dHRvbjogXCI6aXMoYnV0dG9uLCBpbnB1dFt0eXBlPWJ1dHRvbl0pXCIsXG4gICAgaW5wdXQ6IFwiOmlzKGlucHV0LCB0ZXh0YXJlYSwgc2VsZWN0LCBidXR0b24pXCIsXG4gICAgdGV4dDogXCJpbnB1dDppcyg6bm90KFt0eXBlIT0nJ10pLCBbdHlwZT10ZXh0XSlcIixcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbGlhc2VzLmpzLm1hcCJdLCJuYW1lcyI6WyJhbGlhc2VzIiwibGluayIsImRpc2FibGVkIiwiZW5hYmxlZCIsImNoZWNrZWQiLCJyZXF1aXJlZCIsIm9wdGlvbmFsIiwic2VsZWN0ZWQiLCJjaGVja2JveCIsImZpbGUiLCJwYXNzd29yZCIsInJhZGlvIiwicmVzZXQiLCJpbWFnZSIsInN1Ym1pdCIsInBhcmVudCIsImhlYWRlciIsImJ1dHRvbiIsImlucHV0IiwidGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/aliases.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/filters.js":
/*!*********************************************************************!*\
  !*** ./node_modules/css-select/lib/esm/pseudo-selectors/filters.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filters: () => (/* binding */ filters)\n/* harmony export */ });\n/* harmony import */ var nth_check__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nth-check */ \"(action-browser)/./node_modules/nth-check/lib/esm/index.js\");\n/* harmony import */ var boolbase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! boolbase */ \"(action-browser)/./node_modules/boolbase/index.js\");\n\n\nfunction getChildFunc(next, adapter) {\n    return (elem)=>{\n        const parent = adapter.getParent(elem);\n        return parent != null && adapter.isTag(parent) && next(elem);\n    };\n}\nconst filters = {\n    contains (next, text, { adapter }) {\n        return function contains(elem) {\n            return next(elem) && adapter.getText(elem).includes(text);\n        };\n    },\n    icontains (next, text, { adapter }) {\n        const itext = text.toLowerCase();\n        return function icontains(elem) {\n            return next(elem) && adapter.getText(elem).toLowerCase().includes(itext);\n        };\n    },\n    // Location specific methods\n    \"nth-child\" (next, rule, { adapter, equals }) {\n        const func = (0,nth_check__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(rule);\n        if (func === boolbase__WEBPACK_IMPORTED_MODULE_1__.falseFunc) return boolbase__WEBPACK_IMPORTED_MODULE_1__.falseFunc;\n        if (func === boolbase__WEBPACK_IMPORTED_MODULE_1__.trueFunc) return getChildFunc(next, adapter);\n        return function nthChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for(let i = 0; i < siblings.length; i++){\n                if (equals(elem, siblings[i])) break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-child\" (next, rule, { adapter, equals }) {\n        const func = (0,nth_check__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(rule);\n        if (func === boolbase__WEBPACK_IMPORTED_MODULE_1__.falseFunc) return boolbase__WEBPACK_IMPORTED_MODULE_1__.falseFunc;\n        if (func === boolbase__WEBPACK_IMPORTED_MODULE_1__.trueFunc) return getChildFunc(next, adapter);\n        return function nthLastChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for(let i = siblings.length - 1; i >= 0; i--){\n                if (equals(elem, siblings[i])) break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-of-type\" (next, rule, { adapter, equals }) {\n        const func = (0,nth_check__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(rule);\n        if (func === boolbase__WEBPACK_IMPORTED_MODULE_1__.falseFunc) return boolbase__WEBPACK_IMPORTED_MODULE_1__.falseFunc;\n        if (func === boolbase__WEBPACK_IMPORTED_MODULE_1__.trueFunc) return getChildFunc(next, adapter);\n        return function nthOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for(let i = 0; i < siblings.length; i++){\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling)) break;\n                if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-of-type\" (next, rule, { adapter, equals }) {\n        const func = (0,nth_check__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(rule);\n        if (func === boolbase__WEBPACK_IMPORTED_MODULE_1__.falseFunc) return boolbase__WEBPACK_IMPORTED_MODULE_1__.falseFunc;\n        if (func === boolbase__WEBPACK_IMPORTED_MODULE_1__.trueFunc) return getChildFunc(next, adapter);\n        return function nthLastOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for(let i = siblings.length - 1; i >= 0; i--){\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling)) break;\n                if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    // TODO determine the actual root element\n    root (next, _rule, { adapter }) {\n        return (elem)=>{\n            const parent = adapter.getParent(elem);\n            return (parent == null || !adapter.isTag(parent)) && next(elem);\n        };\n    },\n    scope (next, rule, options, context) {\n        const { equals } = options;\n        if (!context || context.length === 0) {\n            // Equivalent to :root\n            return filters[\"root\"](next, rule, options);\n        }\n        if (context.length === 1) {\n            // NOTE: can't be unpacked, as :has uses this for side-effects\n            return (elem)=>equals(context[0], elem) && next(elem);\n        }\n        return (elem)=>context.includes(elem) && next(elem);\n    },\n    hover: dynamicStatePseudo(\"isHovered\"),\n    visited: dynamicStatePseudo(\"isVisited\"),\n    active: dynamicStatePseudo(\"isActive\")\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */ function dynamicStatePseudo(name) {\n    return function dynamicPseudo(next, _rule, { adapter }) {\n        const func = adapter[name];\n        if (typeof func !== \"function\") {\n            return boolbase__WEBPACK_IMPORTED_MODULE_1__.falseFunc;\n        }\n        return function active(elem) {\n            return func(elem) && next(elem);\n        };\n    };\n} //# sourceMappingURL=filters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/filters.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/css-select/lib/esm/pseudo-selectors/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aliases: () => (/* reexport safe */ _aliases_js__WEBPACK_IMPORTED_MODULE_2__.aliases),\n/* harmony export */   compilePseudoSelector: () => (/* binding */ compilePseudoSelector),\n/* harmony export */   filters: () => (/* reexport safe */ _filters_js__WEBPACK_IMPORTED_MODULE_0__.filters),\n/* harmony export */   pseudos: () => (/* reexport safe */ _pseudos_js__WEBPACK_IMPORTED_MODULE_1__.pseudos)\n/* harmony export */ });\n/* harmony import */ var css_what__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! css-what */ \"(action-browser)/./node_modules/css-what/lib/es/index.js\");\n/* harmony import */ var _filters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./filters.js */ \"(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/filters.js\");\n/* harmony import */ var _pseudos_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pseudos.js */ \"(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/pseudos.js\");\n/* harmony import */ var _aliases_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aliases.js */ \"(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/aliases.js\");\n/* harmony import */ var _subselects_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./subselects.js */ \"(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/subselects.js\");\n\n\n\n\n\n\nfunction compilePseudoSelector(next, selector, options, context, compileToken) {\n    var _a;\n    const { name, data } = selector;\n    if (Array.isArray(data)) {\n        if (!(name in _subselects_js__WEBPACK_IMPORTED_MODULE_3__.subselects)) {\n            throw new Error(`Unknown pseudo-class :${name}(${data})`);\n        }\n        return _subselects_js__WEBPACK_IMPORTED_MODULE_3__.subselects[name](next, data, options, context, compileToken);\n    }\n    const userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];\n    const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : _aliases_js__WEBPACK_IMPORTED_MODULE_2__.aliases[name];\n    if (typeof stringPseudo === \"string\") {\n        if (data != null) {\n            throw new Error(`Pseudo ${name} doesn't have any arguments`);\n        }\n        // The alias has to be parsed here, to make sure options are respected.\n        const alias = (0,css_what__WEBPACK_IMPORTED_MODULE_4__.parse)(stringPseudo);\n        return _subselects_js__WEBPACK_IMPORTED_MODULE_3__.subselects[\"is\"](next, alias, options, context, compileToken);\n    }\n    if (typeof userPseudo === \"function\") {\n        (0,_pseudos_js__WEBPACK_IMPORTED_MODULE_1__.verifyPseudoArgs)(userPseudo, name, data, 1);\n        return (elem)=>userPseudo(elem, data) && next(elem);\n    }\n    if (name in _filters_js__WEBPACK_IMPORTED_MODULE_0__.filters) {\n        return _filters_js__WEBPACK_IMPORTED_MODULE_0__.filters[name](next, data, options, context);\n    }\n    if (name in _pseudos_js__WEBPACK_IMPORTED_MODULE_1__.pseudos) {\n        const pseudo = _pseudos_js__WEBPACK_IMPORTED_MODULE_1__.pseudos[name];\n        (0,_pseudos_js__WEBPACK_IMPORTED_MODULE_1__.verifyPseudoArgs)(pseudo, name, data, 2);\n        return (elem)=>pseudo(elem, options, data) && next(elem);\n    }\n    throw new Error(`Unknown pseudo-class :${name}`);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jc3Mtc2VsZWN0L2xpYi9lc20vcHNldWRvLXNlbGVjdG9ycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBaUM7QUFDTTtBQUNrQjtBQUNsQjtBQUNNO0FBQ1I7QUFDOUIsU0FBU00sc0JBQXNCQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUVDLFlBQVk7SUFDaEYsSUFBSUM7SUFDSixNQUFNLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFLEdBQUdOO0lBQ3ZCLElBQUlPLE1BQU1DLE9BQU8sQ0FBQ0YsT0FBTztRQUNyQixJQUFJLENBQUVELENBQUFBLFFBQVFSLHNEQUFTLEdBQUk7WUFDdkIsTUFBTSxJQUFJWSxNQUFNLENBQUMsc0JBQXNCLEVBQUVKLEtBQUssQ0FBQyxFQUFFQyxLQUFLLENBQUMsQ0FBQztRQUM1RDtRQUNBLE9BQU9ULHNEQUFVLENBQUNRLEtBQUssQ0FBQ04sTUFBTU8sTUFBTUwsU0FBU0MsU0FBU0M7SUFDMUQ7SUFDQSxNQUFNTyxhQUFhLENBQUNOLEtBQUtILFFBQVFQLE9BQU8sTUFBTSxRQUFRVSxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEVBQUUsQ0FBQ0MsS0FBSztJQUN2RixNQUFNTSxlQUFlLE9BQU9ELGVBQWUsV0FBV0EsYUFBYWQsZ0RBQU8sQ0FBQ1MsS0FBSztJQUNoRixJQUFJLE9BQU9NLGlCQUFpQixVQUFVO1FBQ2xDLElBQUlMLFFBQVEsTUFBTTtZQUNkLE1BQU0sSUFBSUcsTUFBTSxDQUFDLE9BQU8sRUFBRUosS0FBSywyQkFBMkIsQ0FBQztRQUMvRDtRQUNBLHVFQUF1RTtRQUN2RSxNQUFNTyxRQUFRcEIsK0NBQUtBLENBQUNtQjtRQUNwQixPQUFPZCxzREFBVSxDQUFDLEtBQUssQ0FBQ0UsTUFBTWEsT0FBT1gsU0FBU0MsU0FBU0M7SUFDM0Q7SUFDQSxJQUFJLE9BQU9PLGVBQWUsWUFBWTtRQUNsQ2YsNkRBQWdCQSxDQUFDZSxZQUFZTCxNQUFNQyxNQUFNO1FBQ3pDLE9BQU8sQ0FBQ08sT0FBU0gsV0FBV0csTUFBTVAsU0FBU1AsS0FBS2M7SUFDcEQ7SUFDQSxJQUFJUixRQUFRWixnREFBT0EsRUFBRTtRQUNqQixPQUFPQSxnREFBTyxDQUFDWSxLQUFLLENBQUNOLE1BQU1PLE1BQU1MLFNBQVNDO0lBQzlDO0lBQ0EsSUFBSUcsUUFBUVgsZ0RBQU9BLEVBQUU7UUFDakIsTUFBTW9CLFNBQVNwQixnREFBTyxDQUFDVyxLQUFLO1FBQzVCViw2REFBZ0JBLENBQUNtQixRQUFRVCxNQUFNQyxNQUFNO1FBQ3JDLE9BQU8sQ0FBQ08sT0FBU0MsT0FBT0QsTUFBTVosU0FBU0ssU0FBU1AsS0FBS2M7SUFDekQ7SUFDQSxNQUFNLElBQUlKLE1BQU0sQ0FBQyxzQkFBc0IsRUFBRUosS0FBSyxDQUFDO0FBQ25ELEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV3LXJ1bWJsZS1kb3dubG9hZGVyLy4vbm9kZV9tb2R1bGVzL2Nzcy1zZWxlY3QvbGliL2VzbS9wc2V1ZG8tc2VsZWN0b3JzL2luZGV4LmpzPzRiNDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2UgfSBmcm9tIFwiY3NzLXdoYXRcIjtcbmltcG9ydCB7IGZpbHRlcnMgfSBmcm9tIFwiLi9maWx0ZXJzLmpzXCI7XG5pbXBvcnQgeyBwc2V1ZG9zLCB2ZXJpZnlQc2V1ZG9BcmdzIH0gZnJvbSBcIi4vcHNldWRvcy5qc1wiO1xuaW1wb3J0IHsgYWxpYXNlcyB9IGZyb20gXCIuL2FsaWFzZXMuanNcIjtcbmltcG9ydCB7IHN1YnNlbGVjdHMgfSBmcm9tIFwiLi9zdWJzZWxlY3RzLmpzXCI7XG5leHBvcnQgeyBmaWx0ZXJzLCBwc2V1ZG9zLCBhbGlhc2VzIH07XG5leHBvcnQgZnVuY3Rpb24gY29tcGlsZVBzZXVkb1NlbGVjdG9yKG5leHQsIHNlbGVjdG9yLCBvcHRpb25zLCBjb250ZXh0LCBjb21waWxlVG9rZW4pIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgeyBuYW1lLCBkYXRhIH0gPSBzZWxlY3RvcjtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgICBpZiAoIShuYW1lIGluIHN1YnNlbGVjdHMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gcHNldWRvLWNsYXNzIDoke25hbWV9KCR7ZGF0YX0pYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN1YnNlbGVjdHNbbmFtZV0obmV4dCwgZGF0YSwgb3B0aW9ucywgY29udGV4dCwgY29tcGlsZVRva2VuKTtcbiAgICB9XG4gICAgY29uc3QgdXNlclBzZXVkbyA9IChfYSA9IG9wdGlvbnMucHNldWRvcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW25hbWVdO1xuICAgIGNvbnN0IHN0cmluZ1BzZXVkbyA9IHR5cGVvZiB1c2VyUHNldWRvID09PSBcInN0cmluZ1wiID8gdXNlclBzZXVkbyA6IGFsaWFzZXNbbmFtZV07XG4gICAgaWYgKHR5cGVvZiBzdHJpbmdQc2V1ZG8gPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKGRhdGEgIT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQc2V1ZG8gJHtuYW1lfSBkb2Vzbid0IGhhdmUgYW55IGFyZ3VtZW50c2ApO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRoZSBhbGlhcyBoYXMgdG8gYmUgcGFyc2VkIGhlcmUsIHRvIG1ha2Ugc3VyZSBvcHRpb25zIGFyZSByZXNwZWN0ZWQuXG4gICAgICAgIGNvbnN0IGFsaWFzID0gcGFyc2Uoc3RyaW5nUHNldWRvKTtcbiAgICAgICAgcmV0dXJuIHN1YnNlbGVjdHNbXCJpc1wiXShuZXh0LCBhbGlhcywgb3B0aW9ucywgY29udGV4dCwgY29tcGlsZVRva2VuKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB1c2VyUHNldWRvID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgdmVyaWZ5UHNldWRvQXJncyh1c2VyUHNldWRvLCBuYW1lLCBkYXRhLCAxKTtcbiAgICAgICAgcmV0dXJuIChlbGVtKSA9PiB1c2VyUHNldWRvKGVsZW0sIGRhdGEpICYmIG5leHQoZWxlbSk7XG4gICAgfVxuICAgIGlmIChuYW1lIGluIGZpbHRlcnMpIHtcbiAgICAgICAgcmV0dXJuIGZpbHRlcnNbbmFtZV0obmV4dCwgZGF0YSwgb3B0aW9ucywgY29udGV4dCk7XG4gICAgfVxuICAgIGlmIChuYW1lIGluIHBzZXVkb3MpIHtcbiAgICAgICAgY29uc3QgcHNldWRvID0gcHNldWRvc1tuYW1lXTtcbiAgICAgICAgdmVyaWZ5UHNldWRvQXJncyhwc2V1ZG8sIG5hbWUsIGRhdGEsIDIpO1xuICAgICAgICByZXR1cm4gKGVsZW0pID0+IHBzZXVkbyhlbGVtLCBvcHRpb25zLCBkYXRhKSAmJiBuZXh0KGVsZW0pO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gcHNldWRvLWNsYXNzIDoke25hbWV9YCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2UiLCJmaWx0ZXJzIiwicHNldWRvcyIsInZlcmlmeVBzZXVkb0FyZ3MiLCJhbGlhc2VzIiwic3Vic2VsZWN0cyIsImNvbXBpbGVQc2V1ZG9TZWxlY3RvciIsIm5leHQiLCJzZWxlY3RvciIsIm9wdGlvbnMiLCJjb250ZXh0IiwiY29tcGlsZVRva2VuIiwiX2EiLCJuYW1lIiwiZGF0YSIsIkFycmF5IiwiaXNBcnJheSIsIkVycm9yIiwidXNlclBzZXVkbyIsInN0cmluZ1BzZXVkbyIsImFsaWFzIiwiZWxlbSIsInBzZXVkbyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/pseudos.js":
/*!*********************************************************************!*\
  !*** ./node_modules/css-select/lib/esm/pseudo-selectors/pseudos.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pseudos: () => (/* binding */ pseudos),\n/* harmony export */   verifyPseudoArgs: () => (/* binding */ verifyPseudoArgs)\n/* harmony export */ });\n// While filters are precompiled, pseudos get called when they are needed\nconst pseudos = {\n    empty (elem, { adapter }) {\n        return !adapter.getChildren(elem).some((elem)=>// FIXME: `getText` call is potentially expensive.\n            adapter.isTag(elem) || adapter.getText(elem) !== \"\");\n    },\n    \"first-child\" (elem, { adapter, equals }) {\n        if (adapter.prevElementSibling) {\n            return adapter.prevElementSibling(elem) == null;\n        }\n        const firstChild = adapter.getSiblings(elem).find((elem)=>adapter.isTag(elem));\n        return firstChild != null && equals(elem, firstChild);\n    },\n    \"last-child\" (elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        for(let i = siblings.length - 1; i >= 0; i--){\n            if (equals(elem, siblings[i])) return true;\n            if (adapter.isTag(siblings[i])) break;\n        }\n        return false;\n    },\n    \"first-of-type\" (elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for(let i = 0; i < siblings.length; i++){\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) return true;\n            if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"last-of-type\" (elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for(let i = siblings.length - 1; i >= 0; i--){\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) return true;\n            if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"only-of-type\" (elem, { adapter, equals }) {\n        const elemName = adapter.getName(elem);\n        return adapter.getSiblings(elem).every((sibling)=>equals(elem, sibling) || !adapter.isTag(sibling) || adapter.getName(sibling) !== elemName);\n    },\n    \"only-child\" (elem, { adapter, equals }) {\n        return adapter.getSiblings(elem).every((sibling)=>equals(elem, sibling) || !adapter.isTag(sibling));\n    }\n};\nfunction verifyPseudoArgs(func, name, subselect, argIndex) {\n    if (subselect === null) {\n        if (func.length > argIndex) {\n            throw new Error(`Pseudo-class :${name} requires an argument`);\n        }\n    } else if (func.length === argIndex) {\n        throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n    }\n} //# sourceMappingURL=pseudos.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jc3Mtc2VsZWN0L2xpYi9lc20vcHNldWRvLXNlbGVjdG9ycy9wc2V1ZG9zLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEseUVBQXlFO0FBQ2xFLE1BQU1BLFVBQVU7SUFDbkJDLE9BQU1DLElBQUksRUFBRSxFQUFFQyxPQUFPLEVBQUU7UUFDbkIsT0FBTyxDQUFDQSxRQUFRQyxXQUFXLENBQUNGLE1BQU1HLElBQUksQ0FBQyxDQUFDSCxPQUN4QyxrREFBa0Q7WUFDbERDLFFBQVFHLEtBQUssQ0FBQ0osU0FBU0MsUUFBUUksT0FBTyxDQUFDTCxVQUFVO0lBQ3JEO0lBQ0EsZUFBY0EsSUFBSSxFQUFFLEVBQUVDLE9BQU8sRUFBRUssTUFBTSxFQUFFO1FBQ25DLElBQUlMLFFBQVFNLGtCQUFrQixFQUFFO1lBQzVCLE9BQU9OLFFBQVFNLGtCQUFrQixDQUFDUCxTQUFTO1FBQy9DO1FBQ0EsTUFBTVEsYUFBYVAsUUFDZFEsV0FBVyxDQUFDVCxNQUNaVSxJQUFJLENBQUMsQ0FBQ1YsT0FBU0MsUUFBUUcsS0FBSyxDQUFDSjtRQUNsQyxPQUFPUSxjQUFjLFFBQVFGLE9BQU9OLE1BQU1RO0lBQzlDO0lBQ0EsY0FBYVIsSUFBSSxFQUFFLEVBQUVDLE9BQU8sRUFBRUssTUFBTSxFQUFFO1FBQ2xDLE1BQU1LLFdBQVdWLFFBQVFRLFdBQVcsQ0FBQ1Q7UUFDckMsSUFBSyxJQUFJWSxJQUFJRCxTQUFTRSxNQUFNLEdBQUcsR0FBR0QsS0FBSyxHQUFHQSxJQUFLO1lBQzNDLElBQUlOLE9BQU9OLE1BQU1XLFFBQVEsQ0FBQ0MsRUFBRSxHQUN4QixPQUFPO1lBQ1gsSUFBSVgsUUFBUUcsS0FBSyxDQUFDTyxRQUFRLENBQUNDLEVBQUUsR0FDekI7UUFDUjtRQUNBLE9BQU87SUFDWDtJQUNBLGlCQUFnQlosSUFBSSxFQUFFLEVBQUVDLE9BQU8sRUFBRUssTUFBTSxFQUFFO1FBQ3JDLE1BQU1LLFdBQVdWLFFBQVFRLFdBQVcsQ0FBQ1Q7UUFDckMsTUFBTWMsV0FBV2IsUUFBUWMsT0FBTyxDQUFDZjtRQUNqQyxJQUFLLElBQUlZLElBQUksR0FBR0EsSUFBSUQsU0FBU0UsTUFBTSxFQUFFRCxJQUFLO1lBQ3RDLE1BQU1JLGlCQUFpQkwsUUFBUSxDQUFDQyxFQUFFO1lBQ2xDLElBQUlOLE9BQU9OLE1BQU1nQixpQkFDYixPQUFPO1lBQ1gsSUFBSWYsUUFBUUcsS0FBSyxDQUFDWSxtQkFDZGYsUUFBUWMsT0FBTyxDQUFDQyxvQkFBb0JGLFVBQVU7Z0JBQzlDO1lBQ0o7UUFDSjtRQUNBLE9BQU87SUFDWDtJQUNBLGdCQUFlZCxJQUFJLEVBQUUsRUFBRUMsT0FBTyxFQUFFSyxNQUFNLEVBQUU7UUFDcEMsTUFBTUssV0FBV1YsUUFBUVEsV0FBVyxDQUFDVDtRQUNyQyxNQUFNYyxXQUFXYixRQUFRYyxPQUFPLENBQUNmO1FBQ2pDLElBQUssSUFBSVksSUFBSUQsU0FBU0UsTUFBTSxHQUFHLEdBQUdELEtBQUssR0FBR0EsSUFBSztZQUMzQyxNQUFNSSxpQkFBaUJMLFFBQVEsQ0FBQ0MsRUFBRTtZQUNsQyxJQUFJTixPQUFPTixNQUFNZ0IsaUJBQ2IsT0FBTztZQUNYLElBQUlmLFFBQVFHLEtBQUssQ0FBQ1ksbUJBQ2RmLFFBQVFjLE9BQU8sQ0FBQ0Msb0JBQW9CRixVQUFVO2dCQUM5QztZQUNKO1FBQ0o7UUFDQSxPQUFPO0lBQ1g7SUFDQSxnQkFBZWQsSUFBSSxFQUFFLEVBQUVDLE9BQU8sRUFBRUssTUFBTSxFQUFFO1FBQ3BDLE1BQU1RLFdBQVdiLFFBQVFjLE9BQU8sQ0FBQ2Y7UUFDakMsT0FBT0MsUUFDRlEsV0FBVyxDQUFDVCxNQUNaaUIsS0FBSyxDQUFDLENBQUNDLFVBQVlaLE9BQU9OLE1BQU1rQixZQUNqQyxDQUFDakIsUUFBUUcsS0FBSyxDQUFDYyxZQUNmakIsUUFBUWMsT0FBTyxDQUFDRyxhQUFhSjtJQUNyQztJQUNBLGNBQWFkLElBQUksRUFBRSxFQUFFQyxPQUFPLEVBQUVLLE1BQU0sRUFBRTtRQUNsQyxPQUFPTCxRQUNGUSxXQUFXLENBQUNULE1BQ1ppQixLQUFLLENBQUMsQ0FBQ0MsVUFBWVosT0FBT04sTUFBTWtCLFlBQVksQ0FBQ2pCLFFBQVFHLEtBQUssQ0FBQ2M7SUFDcEU7QUFDSixFQUFFO0FBQ0ssU0FBU0MsaUJBQWlCQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsU0FBUyxFQUFFQyxRQUFRO0lBQzVELElBQUlELGNBQWMsTUFBTTtRQUNwQixJQUFJRixLQUFLUCxNQUFNLEdBQUdVLFVBQVU7WUFDeEIsTUFBTSxJQUFJQyxNQUFNLENBQUMsY0FBYyxFQUFFSCxLQUFLLHFCQUFxQixDQUFDO1FBQ2hFO0lBQ0osT0FDSyxJQUFJRCxLQUFLUCxNQUFNLEtBQUtVLFVBQVU7UUFDL0IsTUFBTSxJQUFJQyxNQUFNLENBQUMsY0FBYyxFQUFFSCxLQUFLLDJCQUEyQixDQUFDO0lBQ3RFO0FBQ0osRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXctcnVtYmxlLWRvd25sb2FkZXIvLi9ub2RlX21vZHVsZXMvY3NzLXNlbGVjdC9saWIvZXNtL3BzZXVkby1zZWxlY3RvcnMvcHNldWRvcy5qcz8yYWFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFdoaWxlIGZpbHRlcnMgYXJlIHByZWNvbXBpbGVkLCBwc2V1ZG9zIGdldCBjYWxsZWQgd2hlbiB0aGV5IGFyZSBuZWVkZWRcbmV4cG9ydCBjb25zdCBwc2V1ZG9zID0ge1xuICAgIGVtcHR5KGVsZW0sIHsgYWRhcHRlciB9KSB7XG4gICAgICAgIHJldHVybiAhYWRhcHRlci5nZXRDaGlsZHJlbihlbGVtKS5zb21lKChlbGVtKSA9PiBcbiAgICAgICAgLy8gRklYTUU6IGBnZXRUZXh0YCBjYWxsIGlzIHBvdGVudGlhbGx5IGV4cGVuc2l2ZS5cbiAgICAgICAgYWRhcHRlci5pc1RhZyhlbGVtKSB8fCBhZGFwdGVyLmdldFRleHQoZWxlbSkgIT09IFwiXCIpO1xuICAgIH0sXG4gICAgXCJmaXJzdC1jaGlsZFwiKGVsZW0sIHsgYWRhcHRlciwgZXF1YWxzIH0pIHtcbiAgICAgICAgaWYgKGFkYXB0ZXIucHJldkVsZW1lbnRTaWJsaW5nKSB7XG4gICAgICAgICAgICByZXR1cm4gYWRhcHRlci5wcmV2RWxlbWVudFNpYmxpbmcoZWxlbSkgPT0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBmaXJzdENoaWxkID0gYWRhcHRlclxuICAgICAgICAgICAgLmdldFNpYmxpbmdzKGVsZW0pXG4gICAgICAgICAgICAuZmluZCgoZWxlbSkgPT4gYWRhcHRlci5pc1RhZyhlbGVtKSk7XG4gICAgICAgIHJldHVybiBmaXJzdENoaWxkICE9IG51bGwgJiYgZXF1YWxzKGVsZW0sIGZpcnN0Q2hpbGQpO1xuICAgIH0sXG4gICAgXCJsYXN0LWNoaWxkXCIoZWxlbSwgeyBhZGFwdGVyLCBlcXVhbHMgfSkge1xuICAgICAgICBjb25zdCBzaWJsaW5ncyA9IGFkYXB0ZXIuZ2V0U2libGluZ3MoZWxlbSk7XG4gICAgICAgIGZvciAobGV0IGkgPSBzaWJsaW5ncy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgaWYgKGVxdWFscyhlbGVtLCBzaWJsaW5nc1tpXSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICBpZiAoYWRhcHRlci5pc1RhZyhzaWJsaW5nc1tpXSkpXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG4gICAgXCJmaXJzdC1vZi10eXBlXCIoZWxlbSwgeyBhZGFwdGVyLCBlcXVhbHMgfSkge1xuICAgICAgICBjb25zdCBzaWJsaW5ncyA9IGFkYXB0ZXIuZ2V0U2libGluZ3MoZWxlbSk7XG4gICAgICAgIGNvbnN0IGVsZW1OYW1lID0gYWRhcHRlci5nZXROYW1lKGVsZW0pO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpYmxpbmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50U2libGluZyA9IHNpYmxpbmdzW2ldO1xuICAgICAgICAgICAgaWYgKGVxdWFscyhlbGVtLCBjdXJyZW50U2libGluZykpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICBpZiAoYWRhcHRlci5pc1RhZyhjdXJyZW50U2libGluZykgJiZcbiAgICAgICAgICAgICAgICBhZGFwdGVyLmdldE5hbWUoY3VycmVudFNpYmxpbmcpID09PSBlbGVtTmFtZSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuICAgIFwibGFzdC1vZi10eXBlXCIoZWxlbSwgeyBhZGFwdGVyLCBlcXVhbHMgfSkge1xuICAgICAgICBjb25zdCBzaWJsaW5ncyA9IGFkYXB0ZXIuZ2V0U2libGluZ3MoZWxlbSk7XG4gICAgICAgIGNvbnN0IGVsZW1OYW1lID0gYWRhcHRlci5nZXROYW1lKGVsZW0pO1xuICAgICAgICBmb3IgKGxldCBpID0gc2libGluZ3MubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRTaWJsaW5nID0gc2libGluZ3NbaV07XG4gICAgICAgICAgICBpZiAoZXF1YWxzKGVsZW0sIGN1cnJlbnRTaWJsaW5nKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIGlmIChhZGFwdGVyLmlzVGFnKGN1cnJlbnRTaWJsaW5nKSAmJlxuICAgICAgICAgICAgICAgIGFkYXB0ZXIuZ2V0TmFtZShjdXJyZW50U2libGluZykgPT09IGVsZW1OYW1lKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG4gICAgXCJvbmx5LW9mLXR5cGVcIihlbGVtLCB7IGFkYXB0ZXIsIGVxdWFscyB9KSB7XG4gICAgICAgIGNvbnN0IGVsZW1OYW1lID0gYWRhcHRlci5nZXROYW1lKGVsZW0pO1xuICAgICAgICByZXR1cm4gYWRhcHRlclxuICAgICAgICAgICAgLmdldFNpYmxpbmdzKGVsZW0pXG4gICAgICAgICAgICAuZXZlcnkoKHNpYmxpbmcpID0+IGVxdWFscyhlbGVtLCBzaWJsaW5nKSB8fFxuICAgICAgICAgICAgIWFkYXB0ZXIuaXNUYWcoc2libGluZykgfHxcbiAgICAgICAgICAgIGFkYXB0ZXIuZ2V0TmFtZShzaWJsaW5nKSAhPT0gZWxlbU5hbWUpO1xuICAgIH0sXG4gICAgXCJvbmx5LWNoaWxkXCIoZWxlbSwgeyBhZGFwdGVyLCBlcXVhbHMgfSkge1xuICAgICAgICByZXR1cm4gYWRhcHRlclxuICAgICAgICAgICAgLmdldFNpYmxpbmdzKGVsZW0pXG4gICAgICAgICAgICAuZXZlcnkoKHNpYmxpbmcpID0+IGVxdWFscyhlbGVtLCBzaWJsaW5nKSB8fCAhYWRhcHRlci5pc1RhZyhzaWJsaW5nKSk7XG4gICAgfSxcbn07XG5leHBvcnQgZnVuY3Rpb24gdmVyaWZ5UHNldWRvQXJncyhmdW5jLCBuYW1lLCBzdWJzZWxlY3QsIGFyZ0luZGV4KSB7XG4gICAgaWYgKHN1YnNlbGVjdCA9PT0gbnVsbCkge1xuICAgICAgICBpZiAoZnVuYy5sZW5ndGggPiBhcmdJbmRleCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQc2V1ZG8tY2xhc3MgOiR7bmFtZX0gcmVxdWlyZXMgYW4gYXJndW1lbnRgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChmdW5jLmxlbmd0aCA9PT0gYXJnSW5kZXgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQc2V1ZG8tY2xhc3MgOiR7bmFtZX0gZG9lc24ndCBoYXZlIGFueSBhcmd1bWVudHNgKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wc2V1ZG9zLmpzLm1hcCJdLCJuYW1lcyI6WyJwc2V1ZG9zIiwiZW1wdHkiLCJlbGVtIiwiYWRhcHRlciIsImdldENoaWxkcmVuIiwic29tZSIsImlzVGFnIiwiZ2V0VGV4dCIsImVxdWFscyIsInByZXZFbGVtZW50U2libGluZyIsImZpcnN0Q2hpbGQiLCJnZXRTaWJsaW5ncyIsImZpbmQiLCJzaWJsaW5ncyIsImkiLCJsZW5ndGgiLCJlbGVtTmFtZSIsImdldE5hbWUiLCJjdXJyZW50U2libGluZyIsImV2ZXJ5Iiwic2libGluZyIsInZlcmlmeVBzZXVkb0FyZ3MiLCJmdW5jIiwibmFtZSIsInN1YnNlbGVjdCIsImFyZ0luZGV4IiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/pseudos.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/subselects.js":
/*!************************************************************************!*\
  !*** ./node_modules/css-select/lib/esm/pseudo-selectors/subselects.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PLACEHOLDER_ELEMENT: () => (/* binding */ PLACEHOLDER_ELEMENT),\n/* harmony export */   ensureIsTag: () => (/* binding */ ensureIsTag),\n/* harmony export */   getNextSiblings: () => (/* binding */ getNextSiblings),\n/* harmony export */   subselects: () => (/* binding */ subselects)\n/* harmony export */ });\n/* harmony import */ var boolbase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! boolbase */ \"(action-browser)/./node_modules/boolbase/index.js\");\n/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sort.js */ \"(action-browser)/./node_modules/css-select/lib/esm/sort.js\");\n\n\n/** Used as a placeholder for :has. Will be replaced with the actual element. */ const PLACEHOLDER_ELEMENT = {};\nfunction ensureIsTag(next, adapter) {\n    if (next === boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc) return boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc;\n    return (elem)=>adapter.isTag(elem) && next(elem);\n}\nfunction getNextSiblings(elem, adapter) {\n    const siblings = adapter.getSiblings(elem);\n    if (siblings.length <= 1) return [];\n    const elemIndex = siblings.indexOf(elem);\n    if (elemIndex < 0 || elemIndex === siblings.length - 1) return [];\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction copyOptions(options) {\n    // Not copied: context, rootFunc\n    return {\n        xmlMode: !!options.xmlMode,\n        lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n        lowerCaseTags: !!options.lowerCaseTags,\n        quirksMode: !!options.quirksMode,\n        cacheResults: !!options.cacheResults,\n        pseudos: options.pseudos,\n        adapter: options.adapter,\n        equals: options.equals\n    };\n}\nconst is = (next, token, options, context, compileToken)=>{\n    const func = compileToken(token, copyOptions(options), context);\n    return func === boolbase__WEBPACK_IMPORTED_MODULE_0__.trueFunc ? next : func === boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc ? boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc : (elem)=>func(elem) && next(elem);\n};\n/*\n * :not, :has, :is, :matches and :where have to compile selectors\n * doing this in src/pseudos.ts would lead to circular dependencies,\n * so we add them here\n */ const subselects = {\n    is,\n    /**\n     * `:matches` and `:where` are aliases for `:is`.\n     */ matches: is,\n    where: is,\n    not (next, token, options, context, compileToken) {\n        const func = compileToken(token, copyOptions(options), context);\n        return func === boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc ? next : func === boolbase__WEBPACK_IMPORTED_MODULE_0__.trueFunc ? boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc : (elem)=>!func(elem) && next(elem);\n    },\n    has (next, subselect, options, _context, compileToken) {\n        const { adapter } = options;\n        const opts = copyOptions(options);\n        opts.relativeSelector = true;\n        const context = subselect.some((s)=>s.some(_sort_js__WEBPACK_IMPORTED_MODULE_1__.isTraversal)) ? [\n            PLACEHOLDER_ELEMENT\n        ] : undefined;\n        const compiled = compileToken(subselect, opts, context);\n        if (compiled === boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc) return boolbase__WEBPACK_IMPORTED_MODULE_0__.falseFunc;\n        const hasElement = ensureIsTag(compiled, adapter);\n        // If `compiled` is `trueFunc`, we can skip this.\n        if (context && compiled !== boolbase__WEBPACK_IMPORTED_MODULE_0__.trueFunc) {\n            /*\n             * `shouldTestNextSiblings` will only be true if the query starts with\n             * a traversal (sibling or adjacent). That means we will always have a context.\n             */ const { shouldTestNextSiblings = false } = compiled;\n            return (elem)=>{\n                if (!next(elem)) return false;\n                context[0] = elem;\n                const childs = adapter.getChildren(elem);\n                const nextElements = shouldTestNextSiblings ? [\n                    ...childs,\n                    ...getNextSiblings(elem, adapter)\n                ] : childs;\n                return adapter.existsOne(hasElement, nextElements);\n            };\n        }\n        return (elem)=>next(elem) && adapter.existsOne(hasElement, adapter.getChildren(elem));\n    }\n}; //# sourceMappingURL=subselects.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/css-select/lib/esm/pseudo-selectors/subselects.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/css-select/lib/esm/sort.js":
/*!*************************************************!*\
  !*** ./node_modules/css-select/lib/esm/sort.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ sortByProcedure),\n/* harmony export */   isTraversal: () => (/* binding */ isTraversal)\n/* harmony export */ });\n/* harmony import */ var css_what__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! css-what */ \"(action-browser)/./node_modules/css-what/lib/es/index.js\");\n\nconst procedure = new Map([\n    [\n        css_what__WEBPACK_IMPORTED_MODULE_0__.SelectorType.Universal,\n        50\n    ],\n    [\n        css_what__WEBPACK_IMPORTED_MODULE_0__.SelectorType.Tag,\n        30\n    ],\n    [\n        css_what__WEBPACK_IMPORTED_MODULE_0__.SelectorType.Attribute,\n        1\n    ],\n    [\n        css_what__WEBPACK_IMPORTED_MODULE_0__.SelectorType.Pseudo,\n        0\n    ]\n]);\nfunction isTraversal(token) {\n    return !procedure.has(token.type);\n}\nconst attributes = new Map([\n    [\n        css_what__WEBPACK_IMPORTED_MODULE_0__.AttributeAction.Exists,\n        10\n    ],\n    [\n        css_what__WEBPACK_IMPORTED_MODULE_0__.AttributeAction.Equals,\n        8\n    ],\n    [\n        css_what__WEBPACK_IMPORTED_MODULE_0__.AttributeAction.Not,\n        7\n    ],\n    [\n        css_what__WEBPACK_IMPORTED_MODULE_0__.AttributeAction.Start,\n        6\n    ],\n    [\n        css_what__WEBPACK_IMPORTED_MODULE_0__.AttributeAction.End,\n        6\n    ],\n    [\n        css_what__WEBPACK_IMPORTED_MODULE_0__.AttributeAction.Any,\n        5\n    ]\n]);\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */ function sortByProcedure(arr) {\n    const procs = arr.map(getProcedure);\n    for(let i = 1; i < arr.length; i++){\n        const procNew = procs[i];\n        if (procNew < 0) continue;\n        for(let j = i - 1; j >= 0 && procNew < procs[j]; j--){\n            const token = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = token;\n            procs[j + 1] = procs[j];\n            procs[j] = procNew;\n        }\n    }\n}\nfunction getProcedure(token) {\n    var _a, _b;\n    let proc = (_a = procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;\n    if (token.type === css_what__WEBPACK_IMPORTED_MODULE_0__.SelectorType.Attribute) {\n        proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n        if (token.action === css_what__WEBPACK_IMPORTED_MODULE_0__.AttributeAction.Equals && token.name === \"id\") {\n            // Prefer ID selectors (eg. #ID)\n            proc = 9;\n        }\n        if (token.ignoreCase) {\n            /*\n             * IgnoreCase adds some overhead, prefer \"normal\" token\n             * this is a binary operation, to ensure it's still an int\n             */ proc >>= 1;\n        }\n    } else if (token.type === css_what__WEBPACK_IMPORTED_MODULE_0__.SelectorType.Pseudo) {\n        if (!token.data) {\n            proc = 3;\n        } else if (token.name === \"has\" || token.name === \"contains\") {\n            proc = 0; // Expensive in any case\n        } else if (Array.isArray(token.data)) {\n            // Eg. :matches, :not\n            proc = Math.min(...token.data.map((d)=>Math.min(...d.map(getProcedure))));\n            // If we have traversals, try to avoid executing this selector\n            if (proc < 0) {\n                proc = 0;\n            }\n        } else {\n            proc = 2;\n        }\n    }\n    return proc;\n} //# sourceMappingURL=sort.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jc3Mtc2VsZWN0L2xpYi9lc20vc29ydC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUQ7QUFDekQsTUFBTUUsWUFBWSxJQUFJQyxJQUFJO0lBQ3RCO1FBQUNGLGtEQUFZQSxDQUFDRyxTQUFTO1FBQUU7S0FBRztJQUM1QjtRQUFDSCxrREFBWUEsQ0FBQ0ksR0FBRztRQUFFO0tBQUc7SUFDdEI7UUFBQ0osa0RBQVlBLENBQUNLLFNBQVM7UUFBRTtLQUFFO0lBQzNCO1FBQUNMLGtEQUFZQSxDQUFDTSxNQUFNO1FBQUU7S0FBRTtDQUMzQjtBQUNNLFNBQVNDLFlBQVlDLEtBQUs7SUFDN0IsT0FBTyxDQUFDUCxVQUFVUSxHQUFHLENBQUNELE1BQU1FLElBQUk7QUFDcEM7QUFDQSxNQUFNQyxhQUFhLElBQUlULElBQUk7SUFDdkI7UUFBQ0gscURBQWVBLENBQUNhLE1BQU07UUFBRTtLQUFHO0lBQzVCO1FBQUNiLHFEQUFlQSxDQUFDYyxNQUFNO1FBQUU7S0FBRTtJQUMzQjtRQUFDZCxxREFBZUEsQ0FBQ2UsR0FBRztRQUFFO0tBQUU7SUFDeEI7UUFBQ2YscURBQWVBLENBQUNnQixLQUFLO1FBQUU7S0FBRTtJQUMxQjtRQUFDaEIscURBQWVBLENBQUNpQixHQUFHO1FBQUU7S0FBRTtJQUN4QjtRQUFDakIscURBQWVBLENBQUNrQixHQUFHO1FBQUU7S0FBRTtDQUMzQjtBQUNEOzs7Ozs7Q0FNQyxHQUNjLFNBQVNDLGdCQUFnQkMsR0FBRztJQUN2QyxNQUFNQyxRQUFRRCxJQUFJRSxHQUFHLENBQUNDO0lBQ3RCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSixJQUFJSyxNQUFNLEVBQUVELElBQUs7UUFDakMsTUFBTUUsVUFBVUwsS0FBSyxDQUFDRyxFQUFFO1FBQ3hCLElBQUlFLFVBQVUsR0FDVjtRQUNKLElBQUssSUFBSUMsSUFBSUgsSUFBSSxHQUFHRyxLQUFLLEtBQUtELFVBQVVMLEtBQUssQ0FBQ00sRUFBRSxFQUFFQSxJQUFLO1lBQ25ELE1BQU1sQixRQUFRVyxHQUFHLENBQUNPLElBQUksRUFBRTtZQUN4QlAsR0FBRyxDQUFDTyxJQUFJLEVBQUUsR0FBR1AsR0FBRyxDQUFDTyxFQUFFO1lBQ25CUCxHQUFHLENBQUNPLEVBQUUsR0FBR2xCO1lBQ1RZLEtBQUssQ0FBQ00sSUFBSSxFQUFFLEdBQUdOLEtBQUssQ0FBQ00sRUFBRTtZQUN2Qk4sS0FBSyxDQUFDTSxFQUFFLEdBQUdEO1FBQ2Y7SUFDSjtBQUNKO0FBQ0EsU0FBU0gsYUFBYWQsS0FBSztJQUN2QixJQUFJbUIsSUFBSUM7SUFDUixJQUFJQyxPQUFPLENBQUNGLEtBQUsxQixVQUFVNkIsR0FBRyxDQUFDdEIsTUFBTUUsSUFBSSxPQUFPLFFBQVFpQixPQUFPLEtBQUssSUFBSUEsS0FBSyxDQUFDO0lBQzlFLElBQUluQixNQUFNRSxJQUFJLEtBQUtWLGtEQUFZQSxDQUFDSyxTQUFTLEVBQUU7UUFDdkN3QixPQUFPLENBQUNELEtBQUtqQixXQUFXbUIsR0FBRyxDQUFDdEIsTUFBTXVCLE1BQU0sT0FBTyxRQUFRSCxPQUFPLEtBQUssSUFBSUEsS0FBSztRQUM1RSxJQUFJcEIsTUFBTXVCLE1BQU0sS0FBS2hDLHFEQUFlQSxDQUFDYyxNQUFNLElBQUlMLE1BQU13QixJQUFJLEtBQUssTUFBTTtZQUNoRSxnQ0FBZ0M7WUFDaENILE9BQU87UUFDWDtRQUNBLElBQUlyQixNQUFNeUIsVUFBVSxFQUFFO1lBQ2xCOzs7YUFHQyxHQUNESixTQUFTO1FBQ2I7SUFDSixPQUNLLElBQUlyQixNQUFNRSxJQUFJLEtBQUtWLGtEQUFZQSxDQUFDTSxNQUFNLEVBQUU7UUFDekMsSUFBSSxDQUFDRSxNQUFNMEIsSUFBSSxFQUFFO1lBQ2JMLE9BQU87UUFDWCxPQUNLLElBQUlyQixNQUFNd0IsSUFBSSxLQUFLLFNBQVN4QixNQUFNd0IsSUFBSSxLQUFLLFlBQVk7WUFDeERILE9BQU8sR0FBRyx3QkFBd0I7UUFDdEMsT0FDSyxJQUFJTSxNQUFNQyxPQUFPLENBQUM1QixNQUFNMEIsSUFBSSxHQUFHO1lBQ2hDLHFCQUFxQjtZQUNyQkwsT0FBT1EsS0FBS0MsR0FBRyxJQUFJOUIsTUFBTTBCLElBQUksQ0FBQ2IsR0FBRyxDQUFDLENBQUNrQixJQUFNRixLQUFLQyxHQUFHLElBQUlDLEVBQUVsQixHQUFHLENBQUNDO1lBQzNELDhEQUE4RDtZQUM5RCxJQUFJTyxPQUFPLEdBQUc7Z0JBQ1ZBLE9BQU87WUFDWDtRQUNKLE9BQ0s7WUFDREEsT0FBTztRQUNYO0lBQ0o7SUFDQSxPQUFPQTtBQUNYLEVBQ0EsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV3LXJ1bWJsZS1kb3dubG9hZGVyLy4vbm9kZV9tb2R1bGVzL2Nzcy1zZWxlY3QvbGliL2VzbS9zb3J0LmpzP2YzYTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXR0cmlidXRlQWN0aW9uLCBTZWxlY3RvclR5cGUgfSBmcm9tIFwiY3NzLXdoYXRcIjtcbmNvbnN0IHByb2NlZHVyZSA9IG5ldyBNYXAoW1xuICAgIFtTZWxlY3RvclR5cGUuVW5pdmVyc2FsLCA1MF0sXG4gICAgW1NlbGVjdG9yVHlwZS5UYWcsIDMwXSxcbiAgICBbU2VsZWN0b3JUeXBlLkF0dHJpYnV0ZSwgMV0sXG4gICAgW1NlbGVjdG9yVHlwZS5Qc2V1ZG8sIDBdLFxuXSk7XG5leHBvcnQgZnVuY3Rpb24gaXNUcmF2ZXJzYWwodG9rZW4pIHtcbiAgICByZXR1cm4gIXByb2NlZHVyZS5oYXModG9rZW4udHlwZSk7XG59XG5jb25zdCBhdHRyaWJ1dGVzID0gbmV3IE1hcChbXG4gICAgW0F0dHJpYnV0ZUFjdGlvbi5FeGlzdHMsIDEwXSxcbiAgICBbQXR0cmlidXRlQWN0aW9uLkVxdWFscywgOF0sXG4gICAgW0F0dHJpYnV0ZUFjdGlvbi5Ob3QsIDddLFxuICAgIFtBdHRyaWJ1dGVBY3Rpb24uU3RhcnQsIDZdLFxuICAgIFtBdHRyaWJ1dGVBY3Rpb24uRW5kLCA2XSxcbiAgICBbQXR0cmlidXRlQWN0aW9uLkFueSwgNV0sXG5dKTtcbi8qKlxuICogU29ydCB0aGUgcGFydHMgb2YgdGhlIHBhc3NlZCBzZWxlY3RvcixcbiAqIGFzIHRoZXJlIGlzIHBvdGVudGlhbCBmb3Igb3B0aW1pemF0aW9uXG4gKiAoc29tZSB0eXBlcyBvZiBzZWxlY3RvcnMgYXJlIGZhc3RlciB0aGFuIG90aGVycylcbiAqXG4gKiBAcGFyYW0gYXJyIFNlbGVjdG9yIHRvIHNvcnRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc29ydEJ5UHJvY2VkdXJlKGFycikge1xuICAgIGNvbnN0IHByb2NzID0gYXJyLm1hcChnZXRQcm9jZWR1cmUpO1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHByb2NOZXcgPSBwcm9jc1tpXTtcbiAgICAgICAgaWYgKHByb2NOZXcgPCAwKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGZvciAobGV0IGogPSBpIC0gMTsgaiA+PSAwICYmIHByb2NOZXcgPCBwcm9jc1tqXTsgai0tKSB7XG4gICAgICAgICAgICBjb25zdCB0b2tlbiA9IGFycltqICsgMV07XG4gICAgICAgICAgICBhcnJbaiArIDFdID0gYXJyW2pdO1xuICAgICAgICAgICAgYXJyW2pdID0gdG9rZW47XG4gICAgICAgICAgICBwcm9jc1tqICsgMV0gPSBwcm9jc1tqXTtcbiAgICAgICAgICAgIHByb2NzW2pdID0gcHJvY05ldztcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIGdldFByb2NlZHVyZSh0b2tlbikge1xuICAgIHZhciBfYSwgX2I7XG4gICAgbGV0IHByb2MgPSAoX2EgPSBwcm9jZWR1cmUuZ2V0KHRva2VuLnR5cGUpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAtMTtcbiAgICBpZiAodG9rZW4udHlwZSA9PT0gU2VsZWN0b3JUeXBlLkF0dHJpYnV0ZSkge1xuICAgICAgICBwcm9jID0gKF9iID0gYXR0cmlidXRlcy5nZXQodG9rZW4uYWN0aW9uKSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogNDtcbiAgICAgICAgaWYgKHRva2VuLmFjdGlvbiA9PT0gQXR0cmlidXRlQWN0aW9uLkVxdWFscyAmJiB0b2tlbi5uYW1lID09PSBcImlkXCIpIHtcbiAgICAgICAgICAgIC8vIFByZWZlciBJRCBzZWxlY3RvcnMgKGVnLiAjSUQpXG4gICAgICAgICAgICBwcm9jID0gOTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodG9rZW4uaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAqIElnbm9yZUNhc2UgYWRkcyBzb21lIG92ZXJoZWFkLCBwcmVmZXIgXCJub3JtYWxcIiB0b2tlblxuICAgICAgICAgICAgICogdGhpcyBpcyBhIGJpbmFyeSBvcGVyYXRpb24sIHRvIGVuc3VyZSBpdCdzIHN0aWxsIGFuIGludFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBwcm9jID4+PSAxO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHRva2VuLnR5cGUgPT09IFNlbGVjdG9yVHlwZS5Qc2V1ZG8pIHtcbiAgICAgICAgaWYgKCF0b2tlbi5kYXRhKSB7XG4gICAgICAgICAgICBwcm9jID0gMztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0b2tlbi5uYW1lID09PSBcImhhc1wiIHx8IHRva2VuLm5hbWUgPT09IFwiY29udGFpbnNcIikge1xuICAgICAgICAgICAgcHJvYyA9IDA7IC8vIEV4cGVuc2l2ZSBpbiBhbnkgY2FzZVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodG9rZW4uZGF0YSkpIHtcbiAgICAgICAgICAgIC8vIEVnLiA6bWF0Y2hlcywgOm5vdFxuICAgICAgICAgICAgcHJvYyA9IE1hdGgubWluKC4uLnRva2VuLmRhdGEubWFwKChkKSA9PiBNYXRoLm1pbiguLi5kLm1hcChnZXRQcm9jZWR1cmUpKSkpO1xuICAgICAgICAgICAgLy8gSWYgd2UgaGF2ZSB0cmF2ZXJzYWxzLCB0cnkgdG8gYXZvaWQgZXhlY3V0aW5nIHRoaXMgc2VsZWN0b3JcbiAgICAgICAgICAgIGlmIChwcm9jIDwgMCkge1xuICAgICAgICAgICAgICAgIHByb2MgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHJvYyA9IDI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHByb2M7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zb3J0LmpzLm1hcCJdLCJuYW1lcyI6WyJBdHRyaWJ1dGVBY3Rpb24iLCJTZWxlY3RvclR5cGUiLCJwcm9jZWR1cmUiLCJNYXAiLCJVbml2ZXJzYWwiLCJUYWciLCJBdHRyaWJ1dGUiLCJQc2V1ZG8iLCJpc1RyYXZlcnNhbCIsInRva2VuIiwiaGFzIiwidHlwZSIsImF0dHJpYnV0ZXMiLCJFeGlzdHMiLCJFcXVhbHMiLCJOb3QiLCJTdGFydCIsIkVuZCIsIkFueSIsInNvcnRCeVByb2NlZHVyZSIsImFyciIsInByb2NzIiwibWFwIiwiZ2V0UHJvY2VkdXJlIiwiaSIsImxlbmd0aCIsInByb2NOZXciLCJqIiwiX2EiLCJfYiIsInByb2MiLCJnZXQiLCJhY3Rpb24iLCJuYW1lIiwiaWdub3JlQ2FzZSIsImRhdGEiLCJBcnJheSIsImlzQXJyYXkiLCJNYXRoIiwibWluIiwiZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/css-select/lib/esm/sort.js\n");

/***/ })

};
;