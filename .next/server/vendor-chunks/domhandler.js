"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/domhandler";
exports.ids = ["vendor-chunks/domhandler"];
exports.modules = {

/***/ "(action-browser)/./node_modules/domhandler/lib/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/domhandler/lib/esm/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DomHandler: () => (/* binding */ DomHandler),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var domelementtype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! domelementtype */ \"(action-browser)/./node_modules/domelementtype/lib/esm/index.js\");\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node.js */ \"(action-browser)/./node_modules/domhandler/lib/esm/node.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _node_js__WEBPACK_IMPORTED_MODULE_1__) if([\"default\",\"DomHandler\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _node_js__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false\n};\nclass DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */ constructor(callback, options, elementCB){\n        /** The elements of the DOM */ this.dom = [];\n        /** The root element for the DOM */ this.root = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Document(this.dom);\n        /** Indicated whether parsing has been completed. */ this.done = false;\n        /** Stack of open tags. */ this.tagStack = [\n            this.root\n        ];\n        /** A data node that is still being written to. */ this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */ this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Document(this.dom);\n        this.done = false;\n        this.tagStack = [\n            this.root\n        ];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done) return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB) this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Tag : undefined;\n        const element = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        } else {\n            const node = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new _node_js__WEBPACK_IMPORTED_MODULE_1__.Text(\"\");\n        const node = new _node_js__WEBPACK_IMPORTED_MODULE_1__.CDATA([\n            text\n        ]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new _node_js__WEBPACK_IMPORTED_MODULE_1__.ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        } else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DomHandler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kb21oYW5kbGVyL2xpYi9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE2QztBQUMrQztBQUNsRTtBQUMxQixrQkFBa0I7QUFDbEIsTUFBTU8sY0FBYztJQUNoQkMsa0JBQWtCO0lBQ2xCQyxnQkFBZ0I7SUFDaEJDLFNBQVM7QUFDYjtBQUNPLE1BQU1DO0lBQ1Q7Ozs7S0FJQyxHQUNEQyxZQUFZQyxRQUFRLEVBQUVDLE9BQU8sRUFBRUMsU0FBUyxDQUFFO1FBQ3RDLDRCQUE0QixHQUM1QixJQUFJLENBQUNDLEdBQUcsR0FBRyxFQUFFO1FBQ2IsaUNBQWlDLEdBQ2pDLElBQUksQ0FBQ0MsSUFBSSxHQUFHLElBQUlaLDhDQUFRQSxDQUFDLElBQUksQ0FBQ1csR0FBRztRQUNqQyxrREFBa0QsR0FDbEQsSUFBSSxDQUFDRSxJQUFJLEdBQUc7UUFDWix3QkFBd0IsR0FDeEIsSUFBSSxDQUFDQyxRQUFRLEdBQUc7WUFBQyxJQUFJLENBQUNGLElBQUk7U0FBQztRQUMzQixnREFBZ0QsR0FDaEQsSUFBSSxDQUFDRyxRQUFRLEdBQUc7UUFDaEIscUVBQXFFLEdBQ3JFLElBQUksQ0FBQ0MsTUFBTSxHQUFHO1FBQ2Qsa0VBQWtFO1FBQ2xFLElBQUksT0FBT1AsWUFBWSxZQUFZO1lBQy9CQyxZQUFZRDtZQUNaQSxVQUFVUDtRQUNkO1FBQ0EsSUFBSSxPQUFPTSxhQUFhLFVBQVU7WUFDOUJDLFVBQVVEO1lBQ1ZBLFdBQVdTO1FBQ2Y7UUFDQSxJQUFJLENBQUNULFFBQVEsR0FBR0EsYUFBYSxRQUFRQSxhQUFhLEtBQUssSUFBSUEsV0FBVztRQUN0RSxJQUFJLENBQUNDLE9BQU8sR0FBR0EsWUFBWSxRQUFRQSxZQUFZLEtBQUssSUFBSUEsVUFBVVA7UUFDbEUsSUFBSSxDQUFDUSxTQUFTLEdBQUdBLGNBQWMsUUFBUUEsY0FBYyxLQUFLLElBQUlBLFlBQVk7SUFDOUU7SUFDQVEsYUFBYUYsTUFBTSxFQUFF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c291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV3LXJ1bWJsZS1kb3dubG9hZGVyLy4vbm9kZV9tb2R1bGVzL2RvbWhhbmRsZXIvbGliL2VzbS9pbmRleC5qcz82M2VhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRUeXBlIH0gZnJvbSBcImRvbWVsZW1lbnR0eXBlXCI7XG5pbXBvcnQgeyBFbGVtZW50LCBUZXh0LCBDb21tZW50LCBDREFUQSwgRG9jdW1lbnQsIFByb2Nlc3NpbmdJbnN0cnVjdGlvbiwgfSBmcm9tIFwiLi9ub2RlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9ub2RlLmpzXCI7XG4vLyBEZWZhdWx0IG9wdGlvbnNcbmNvbnN0IGRlZmF1bHRPcHRzID0ge1xuICAgIHdpdGhTdGFydEluZGljZXM6IGZhbHNlLFxuICAgIHdpdGhFbmRJbmRpY2VzOiBmYWxzZSxcbiAgICB4bWxNb2RlOiBmYWxzZSxcbn07XG5leHBvcnQgY2xhc3MgRG9tSGFuZGxlciB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIENhbGxlZCBvbmNlIHBhcnNpbmcgaGFzIGNvbXBsZXRlZC5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBTZXR0aW5ncyBmb3IgdGhlIGhhbmRsZXIuXG4gICAgICogQHBhcmFtIGVsZW1lbnRDQiBDYWxsYmFjayB3aGVuZXZlciBhIHRhZyBpcyBjbG9zZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2FsbGJhY2ssIG9wdGlvbnMsIGVsZW1lbnRDQikge1xuICAgICAgICAvKiogVGhlIGVsZW1lbnRzIG9mIHRoZSBET00gKi9cbiAgICAgICAgdGhpcy5kb20gPSBbXTtcbiAgICAgICAgLyoqIFRoZSByb290IGVsZW1lbnQgZm9yIHRoZSBET00gKi9cbiAgICAgICAgdGhpcy5yb290ID0gbmV3IERvY3VtZW50KHRoaXMuZG9tKTtcbiAgICAgICAgLyoqIEluZGljYXRlZCB3aGV0aGVyIHBhcnNpbmcgaGFzIGJlZW4gY29tcGxldGVkLiAqL1xuICAgICAgICB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICAgICAgLyoqIFN0YWNrIG9mIG9wZW4gdGFncy4gKi9cbiAgICAgICAgdGhpcy50YWdTdGFjayA9IFt0aGlzLnJvb3RdO1xuICAgICAgICAvKiogQSBkYXRhIG5vZGUgdGhhdCBpcyBzdGlsbCBiZWluZyB3cml0dGVuIHRvLiAqL1xuICAgICAgICB0aGlzLmxhc3ROb2RlID0gbnVsbDtcbiAgICAgICAgLyoqIFJlZmVyZW5jZSB0byB0aGUgcGFyc2VyIGluc3RhbmNlLiBVc2VkIGZvciBsb2NhdGlvbiBpbmZvcm1hdGlvbi4gKi9cbiAgICAgICAgdGhpcy5wYXJzZXIgPSBudWxsO1xuICAgICAgICAvLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHNraXAgYXJndW1lbnRzLCBmb3IgYmFja3dhcmRzLWNvbXBhdGliaWxpdHlcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGVsZW1lbnRDQiA9IG9wdGlvbnM7XG4gICAgICAgICAgICBvcHRpb25zID0gZGVmYXVsdE9wdHM7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgb3B0aW9ucyA9IGNhbGxiYWNrO1xuICAgICAgICAgICAgY2FsbGJhY2sgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrICE9PSBudWxsICYmIGNhbGxiYWNrICE9PSB2b2lkIDAgPyBjYWxsYmFjayA6IG51bGw7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwID8gb3B0aW9ucyA6IGRlZmF1bHRPcHRzO1xuICAgICAgICB0aGlzLmVsZW1lbnRDQiA9IGVsZW1lbnRDQiAhPT0gbnVsbCAmJiBlbGVtZW50Q0IgIT09IHZvaWQgMCA/IGVsZW1lbnRDQiA6IG51bGw7XG4gICAgfVxuICAgIG9ucGFyc2VyaW5pdChwYXJzZXIpIHtcbiAgICAgICAgdGhpcy5wYXJzZXIgPSBwYXJzZXI7XG4gICAgfVxuICAgIC8vIFJlc2V0cyB0aGUgaGFuZGxlciBiYWNrIHRvIHN0YXJ0aW5nIHN0YXRlXG4gICAgb25yZXNldCgpIHtcbiAgICAgICAgdGhpcy5kb20gPSBbXTtcbiAgICAgICAgdGhpcy5yb290ID0gbmV3IERvY3VtZW50KHRoaXMuZG9tKTtcbiAgICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICAgIHRoaXMudGFnU3RhY2sgPSBbdGhpcy5yb290XTtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgICAgIHRoaXMucGFyc2VyID0gbnVsbDtcbiAgICB9XG4gICAgLy8gU2lnbmFscyB0aGUgaGFuZGxlciB0aGF0IHBhcnNpbmcgaXMgZG9uZVxuICAgIG9uZW5kKCkge1xuICAgICAgICBpZiAodGhpcy5kb25lKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLmRvbmUgPSB0cnVlO1xuICAgICAgICB0aGlzLnBhcnNlciA9IG51bGw7XG4gICAgICAgIHRoaXMuaGFuZGxlQ2FsbGJhY2sobnVsbCk7XG4gICAgfVxuICAgIG9uZXJyb3IoZXJyb3IpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVDYWxsYmFjayhlcnJvcik7XG4gICAgfVxuICAgIG9uY2xvc2V0YWcoKSB7XG4gICAgICAgIHRoaXMubGFzdE5vZGUgPSBudWxsO1xuICAgICAgICBjb25zdCBlbGVtID0gdGhpcy50YWdTdGFjay5wb3AoKTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy53aXRoRW5kSW5kaWNlcykge1xuICAgICAgICAgICAgZWxlbS5lbmRJbmRleCA9IHRoaXMucGFyc2VyLmVuZEluZGV4O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnRDQilcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudENCKGVsZW0pO1xuICAgIH1cbiAgICBvbm9wZW50YWcobmFtZSwgYXR0cmlicykge1xuICAgICAgICBjb25zdCB0eXBlID0gdGhpcy5vcHRpb25zLnhtbE1vZGUgPyBFbGVtZW50VHlwZS5UYWcgOiB1bmRlZmluZWQ7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBuZXcgRWxlbWVudChuYW1lLCBhdHRyaWJzLCB1bmRlZmluZWQsIHR5cGUpO1xuICAgICAgICB0aGlzLmFkZE5vZGUoZWxlbWVudCk7XG4gICAgICAgIHRoaXMudGFnU3RhY2sucHVzaChlbGVtZW50KTtcbiAgICB9XG4gICAgb250ZXh0KGRhdGEpIHtcbiAgICAgICAgY29uc3QgeyBsYXN0Tm9kZSB9ID0gdGhpcztcbiAgICAgICAgaWYgKGxhc3ROb2RlICYmIGxhc3ROb2RlLnR5cGUgPT09IEVsZW1lbnRUeXBlLlRleHQpIHtcbiAgICAgICAgICAgIGxhc3ROb2RlLmRhdGEgKz0gZGF0YTtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMud2l0aEVuZEluZGljZXMpIHtcbiAgICAgICAgICAgICAgICBsYXN0Tm9kZS5lbmRJbmRleCA9IHRoaXMucGFyc2VyLmVuZEluZGV4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3Qgbm9kZSA9IG5ldyBUZXh0KGRhdGEpO1xuICAgICAgICAgICAgdGhpcy5hZGROb2RlKG5vZGUpO1xuICAgICAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG5vZGU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25jb21tZW50KGRhdGEpIHtcbiAgICAgICAgaWYgKHRoaXMubGFzdE5vZGUgJiYgdGhpcy5sYXN0Tm9kZS50eXBlID09PSBFbGVtZW50VHlwZS5Db21tZW50KSB7XG4gICAgICAgICAgICB0aGlzLmxhc3ROb2RlLmRhdGEgKz0gZGF0YTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBub2RlID0gbmV3IENvbW1lbnQoZGF0YSk7XG4gICAgICAgIHRoaXMuYWRkTm9kZShub2RlKTtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG5vZGU7XG4gICAgfVxuICAgIG9uY29tbWVudGVuZCgpIHtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgfVxuICAgIG9uY2RhdGFzdGFydCgpIHtcbiAgICAgICAgY29uc3QgdGV4dCA9IG5ldyBUZXh0KFwiXCIpO1xuICAgICAgICBjb25zdCBub2RlID0gbmV3IENEQVRBKFt0ZXh0XSk7XG4gICAgICAgIHRoaXMuYWRkTm9kZShub2RlKTtcbiAgICAgICAgdGV4dC5wYXJlbnQgPSBub2RlO1xuICAgICAgICB0aGlzLmxhc3ROb2RlID0gdGV4dDtcbiAgICB9XG4gICAgb25jZGF0YWVuZCgpIHtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgfVxuICAgIG9ucHJvY2Vzc2luZ2luc3RydWN0aW9uKG5hbWUsIGRhdGEpIHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IG5ldyBQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24obmFtZSwgZGF0YSk7XG4gICAgICAgIHRoaXMuYWRkTm9kZShub2RlKTtcbiAgICB9XG4gICAgaGFuZGxlQ2FsbGJhY2soZXJyb3IpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmNhbGxiYWNrID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2soZXJyb3IsIHRoaXMuZG9tKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChlcnJvcikge1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkTm9kZShub2RlKSB7XG4gICAgICAgIGNvbnN0IHBhcmVudCA9IHRoaXMudGFnU3RhY2tbdGhpcy50YWdTdGFjay5sZW5ndGggLSAxXTtcbiAgICAgICAgY29uc3QgcHJldmlvdXNTaWJsaW5nID0gcGFyZW50LmNoaWxkcmVuW3BhcmVudC5jaGlsZHJlbi5sZW5ndGggLSAxXTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy53aXRoU3RhcnRJbmRpY2VzKSB7XG4gICAgICAgICAgICBub2RlLnN0YXJ0SW5kZXggPSB0aGlzLnBhcnNlci5zdGFydEluZGV4O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMud2l0aEVuZEluZGljZXMpIHtcbiAgICAgICAgICAgIG5vZGUuZW5kSW5kZXggPSB0aGlzLnBhcnNlci5lbmRJbmRleDtcbiAgICAgICAgfVxuICAgICAgICBwYXJlbnQuY2hpbGRyZW4ucHVzaChub2RlKTtcbiAgICAgICAgaWYgKHByZXZpb3VzU2libGluZykge1xuICAgICAgICAgICAgbm9kZS5wcmV2ID0gcHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgcHJldmlvdXNTaWJsaW5nLm5leHQgPSBub2RlO1xuICAgICAgICB9XG4gICAgICAgIG5vZGUucGFyZW50ID0gcGFyZW50O1xuICAgICAgICB0aGlzLmxhc3ROb2RlID0gbnVsbDtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBEb21IYW5kbGVyO1xuIl0sIm5hbWVzIjpbIkVsZW1lbnRUeXBlIiwiRWxlbWVudCIsIlRleHQiLCJDb21tZW50IiwiQ0RBVEEiLCJEb2N1bWVudCIsIlByb2Nlc3NpbmdJbnN0cnVjdGlvbiIsImRlZmF1bHRPcHRzIiwid2l0aFN0YXJ0SW5kaWNlcyIsIndpdGhFbmRJbmRpY2VzIiwieG1sTW9kZSIsIkRvbUhhbmRsZXIiLCJjb25zdHJ1Y3RvciIsImNhbGxiYWNrIiwib3B0aW9ucyIsImVsZW1lbnRDQiIsImRvbSIsInJvb3QiLCJkb25lIiwidGFnU3RhY2siLCJsYXN0Tm9kZSIsInBhcnNlciIsInVuZGVmaW5lZCIsIm9ucGFyc2VyaW5pdCIsIm9ucmVzZXQiLCJvbmVuZCIsImhhbmRsZUNhbGxiYWNrIiwib25lcnJvciIsImVycm9yIiwib25jbG9zZXRhZyIsImVsZW0iLCJwb3AiLCJlbmRJbmRleCIsIm9ub3BlbnRhZyIsIm5hbWUiLCJhdHRyaWJzIiwidHlwZSIsIlRhZyIsImVsZW1lbnQiLCJhZGROb2RlIiwicHVzaCIsIm9udGV4dCIsImRhdGEiLCJub2RlIiwib25jb21tZW50Iiwib25jb21tZW50ZW5kIiwib25jZGF0YXN0YXJ0IiwidGV4dCIsInBhcmVudCIsIm9uY2RhdGFlbmQiLCJvbnByb2Nlc3NpbmdpbnN0cnVjdGlvbiIsImxlbmd0aCIsInByZXZpb3VzU2libGluZyIsImNoaWxkcmVuIiwic3RhcnRJbmRleCIsInByZXYiLCJuZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/domhandler/lib/esm/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/domhandler/lib/esm/node.js":
/*!*************************************************!*\
  !*** ./node_modules/domhandler/lib/esm/node.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CDATA: () => (/* binding */ CDATA),\n/* harmony export */   Comment: () => (/* binding */ Comment),\n/* harmony export */   DataNode: () => (/* binding */ DataNode),\n/* harmony export */   Document: () => (/* binding */ Document),\n/* harmony export */   Element: () => (/* binding */ Element),\n/* harmony export */   Node: () => (/* binding */ Node),\n/* harmony export */   NodeWithChildren: () => (/* binding */ NodeWithChildren),\n/* harmony export */   ProcessingInstruction: () => (/* binding */ ProcessingInstruction),\n/* harmony export */   Text: () => (/* binding */ Text),\n/* harmony export */   cloneNode: () => (/* binding */ cloneNode),\n/* harmony export */   hasChildren: () => (/* binding */ hasChildren),\n/* harmony export */   isCDATA: () => (/* binding */ isCDATA),\n/* harmony export */   isComment: () => (/* binding */ isComment),\n/* harmony export */   isDirective: () => (/* binding */ isDirective),\n/* harmony export */   isDocument: () => (/* binding */ isDocument),\n/* harmony export */   isTag: () => (/* binding */ isTag),\n/* harmony export */   isText: () => (/* binding */ isText)\n/* harmony export */ });\n/* harmony import */ var domelementtype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! domelementtype */ \"(action-browser)/./node_modules/domelementtype/lib/esm/index.js\");\n\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */ class Node {\n    constructor(){\n        /** Parent of the node */ this.parent = null;\n        /** Previous sibling */ this.prev = null;\n        /** Next sibling */ this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */ this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */ this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */ cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */ class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */ constructor(data){\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */ class Text extends DataNode {\n    constructor(){\n        super(...arguments);\n        this.type = domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */ class Comment extends DataNode {\n    constructor(){\n        super(...arguments);\n        this.type = domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */ class ProcessingInstruction extends DataNode {\n    constructor(name, data){\n        super(data);\n        this.name = name;\n        this.type = domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */ class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */ constructor(children){\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */ get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */ get lastChild() {\n        return this.children.length > 0 ? this.children[this.children.length - 1] : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nclass CDATA extends NodeWithChildren {\n    constructor(){\n        super(...arguments);\n        this.type = domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */ class Document extends NodeWithChildren {\n    constructor(){\n        super(...arguments);\n        this.type = domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */ class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */ constructor(name, attribs, children = [], type = name === \"script\" ? domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Script : name === \"style\" ? domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Style : domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Tag){\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */ get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name)=>{\n            var _a, _b;\n            return {\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name]\n            };\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */ function isTag(node) {\n    return (0,domelementtype__WEBPACK_IMPORTED_MODULE_0__.isTag)(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */ function isCDATA(node) {\n    return node.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */ function isText(node) {\n    return node.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */ function isComment(node) {\n    return node.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */ function isDirective(node) {\n    return node.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */ function isDocument(node) {\n    return node.type === domelementtype__WEBPACK_IMPORTED_MODULE_0__.ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */ function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */ function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    } else if (isComment(node)) {\n        result = new Comment(node.data);\n    } else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, {\n            ...node.attribs\n        }, children);\n        children.forEach((child)=>child.parent = clone);\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = {\n                ...node[\"x-attribsNamespace\"]\n            };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = {\n                ...node[\"x-attribsPrefix\"]\n            };\n        }\n        result = clone;\n    } else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child)=>child.parent = clone);\n        result = clone;\n    } else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child)=>child.parent = clone);\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    } else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    } else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child)=>cloneNode(child, true));\n    for(let i = 1; i < children.length; i++){\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/domhandler/lib/esm/node.js\n");

/***/ })

};
;